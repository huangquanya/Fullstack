{"version":3,"sources":["application/Rank/style.js","application/Rank/index.js"],"names":["Container","styled","div","style","List","ul","props","globalRank","ListItem","li","tracks","length","SongList","EnterLoading","connect","state","rankList","getIn","loading","dispatch","getRankListDataDispatch","getRankList","React","memo","list","toJS","useEffect","globalStartIndex","filterIndex","officialList","slice","globalList","renderRankList","global","map","item","key","coverImgId_str","onClick","enterDetail","className","src","coverImgUrl","alt","updateFrequency","renderSongList","detail","history","push","id","index","first","second","displayStyle","renderRoutes","route","routes"],"mappings":"2gEAKO,IAAMA,EAAYC,IAAOC,IAAV,IASLC,IAAM,eACVA,IAAM,oBAGNC,EAAOH,IAAOI,GAAV,KAGJ,SAAAC,GAAK,OAAIA,EAAMC,WAAa,OAAS,KAIlCJ,IAAM,qBAOTK,EAAWP,IAAOQ,GAAV,KACR,SAAAH,GAAK,OAAIA,EAAMI,OAAOC,OAAS,OAAS,KAExBR,IAAM,iBAErB,SAAAG,GAAK,OAAIA,EAAMI,OAAOC,OAAS,OAAS,UACxC,SAAAL,GAAK,OAAIA,EAAMI,OAAOC,OAAS,OAAS,SAqBnCR,IAAM,gBACVA,IAAM,qBAIRS,EAAWX,IAAOI,GAAV,IAWJF,IAAM,gBAOVU,EAAeZ,IAAOC,IAAV,K,gBCkBVY,uBAbS,SAACC,GAAD,MAAY,CAClCC,SAAUD,EAAME,MAAM,CAAC,OAAQ,aAC/BC,QAASH,EAAME,MAAM,CAAC,OAAQ,gBAGL,SAACE,GAC1B,MAAO,CACLC,wBADK,WAEHD,EAASE,mBAKAP,CAA6CQ,IAAMC,MA3FlE,SAAcjB,GAAQ,IACFkB,EAAkBlB,EAA5BU,SAAgBE,EAAYZ,EAAZY,QAEhBE,EAA4Bd,EAA5Bc,wBAEJJ,EAAWQ,EAAOA,EAAKC,OAAS,GAEpCC,qBAAU,WACHV,EAASL,QACZS,MAED,IAEH,IAAIO,EAAmBC,YAAYZ,GAC/Ba,EAAeb,EAASc,MAAM,EAAGH,GACjCI,EAAaf,EAASc,MAAMH,GAK1BK,EAAiB,SAACR,EAAMS,GAC5B,OACE,kBAAC7B,EAAD,CAAMG,WAAY0B,GAEdT,EAAKU,KAAI,SAACC,GAIR,OACE,kBAAC3B,EAAD,CAAU4B,IAAKD,EAAKE,eAAgB3B,OAAQyB,EAAKzB,OAAQ4B,QAAS,kBAAMC,EAAYJ,KAClF,yBAAKK,UAAU,eACb,yBAAKC,IAAKN,EAAKO,YAAaC,IAAI,KAChC,yBAAKH,UAAU,aACf,0BAAMA,UAAU,mBAAmBL,EAAKS,kBAExCC,EAAeV,EAAKzB,cAS9B6B,EAAc,SAACO,GACnBxC,EAAMyC,QAAQC,KAAd,gBAA6BF,EAAOG,MAGhCJ,EAAiB,SAACrB,GACtB,OAAOA,EAAKb,OACV,kBAACC,EAAD,KAEIY,EAAKU,KAAI,SAACC,EAAMe,GACd,OAAO,wBAAId,IAAKc,GAAQA,EAAQ,EAAzB,KAA8Bf,EAAKgB,MAAnC,MAA6ChB,EAAKiB,YAI7D,MAEFC,EAAenC,EAAU,CAAE,QAAW,QAAW,CAAE,QAAW,IAElE,OACE,kBAAClB,EAAD,KACE,kBAAC,IAAD,KACE,6BACE,wBAAIwC,UAAU,UAAUrC,MAAOkD,GAA/B,wBACCrB,EAAeH,GAChB,wBAAIW,UAAU,SAASrC,MAAOkD,GAA9B,wBACCrB,EAAeD,GAAY,GAC3Bb,EAAU,kBAACL,EAAD,KAAc,kBAAC,IAAD,OAAqC,OAGjEyC,YAAahD,EAAMiD,MAAMC","file":"static/js/9.021d2086.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\n// Props 中的 globalRank 和 tracks.length 均代表是否为全球榜\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  top: 90px;\r\n  bottom: 0;\r\n  width: 100%;\r\n  .offical,.global {\r\n    margin: 10px 5px;\r\n    padding-top: 15px;\r\n    font-weight: 700;\r\n    font-size: ${style[\"font-size-m\"]};\r\n    color: ${style[\"font-color-desc\"]};\r\n  }\r\n`;\r\nexport const List = styled.ul`\r\n  margin-top: 10px;\r\n  padding: 0 5px;\r\n  display: ${props => props.globalRank ? \"flex\" : \"\"};\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  background: ${style[\"background-color\"]};\r\n  &::after {\r\n    content:\"\";\r\n    display:block;\r\n    width: 32vw;\r\n  }\r\n`\r\nexport const ListItem = styled.li`\r\n  display: ${props => props.tracks.length ? \"flex\" : \"\"};\r\n  padding: 3px 0;\r\n  border-bottom: 1px solid ${style[\"border-color\"]};\r\n  .img_wrapper {\r\n    width:  ${props => props.tracks.length ? \"27vw\" : \"32vw\"};\r\n    height: ${props => props.tracks.length ? \"27vw\" : \"32vw\"};\r\n    border-radius: 3px;\r\n    position: relative;\r\n    flex-shrink: 0;\r\n    .decorate {\r\n      position: absolute;\r\n      bottom: 0;\r\n      width: 100%;\r\n      height: 35px;\r\n      border-radius: 3px;\r\n      background: linear-gradient(hsla(0,0%,100%,0),hsla(0,0%,43%,.4));\r\n    }\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 3px;\r\n    }\r\n    .update_frequecy {\r\n      position: absolute;\r\n      left: 7px;\r\n      bottom: 7px;\r\n      font-size: ${style[\"font-size-ss\"]};\r\n      color: ${style[\"font-color-light\"]};\r\n    }\r\n  }\r\n`;\r\nexport const SongList = styled.ul`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 10px 10px;\r\n  box-sizing:border-box;\r\n  white-space:nowrap;\r\n  overflow:hidden;\r\n  text-overflow:ellipsis;\r\n  >li {\r\n    font-size: ${style[\"font-size-s\"]};\r\n    color: grey;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`;\r\n\r\nexport const EnterLoading = styled.div`\r\n  position: fixed;\r\n  left: 0; right: 0; top: 0; bottom: 0;\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: auto;\r\n`","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getRankList } from './store/index'\r\nimport { filterIndex } from '../../api/utils'\r\nimport Scroll from '../../baseUI/scroll'\r\nimport { List, ListItem, SongList, Container,EnterLoading } from './style'\r\nimport {renderRoutes} from 'react-router-config'\r\nimport Loading from '../../baseUI/loading'\r\n\r\nfunction Rank(props) {\r\n  const { rankList: list, loading } = props;\r\n\r\n  const { getRankListDataDispatch } = props;\r\n\r\n  let rankList = list ? list.toJS() : [];\r\n\r\n  useEffect(() => {\r\n    if (!rankList.length) {\r\n      getRankListDataDispatch();\r\n    }\r\n  }, [])\r\n\r\n  let globalStartIndex = filterIndex(rankList);\r\n  let officialList = rankList.slice(0, globalStartIndex);\r\n  let globalList = rankList.slice(globalStartIndex);\r\n\r\n\r\n\r\n  // 这是渲染榜单列表函数，传入 global 变量来区分不同的布局方式\r\n  const renderRankList = (list, global) => {\r\n    return (\r\n      <List globalRank={global}>\r\n        {\r\n          list.map((item) => {\r\n            // if(item.coverImgId===109951164432303700){\r\n            //   console.log(item)\r\n            // }id出现重名，调试\r\n            return (\r\n              <ListItem key={item.coverImgId_str} tracks={item.tracks} onClick={() => enterDetail(item)}>\r\n                <div className=\"img_wrapper\">\r\n                  <img src={item.coverImgUrl} alt=\"\" />\r\n                  <div className=\"decorate\"></div>\r\n                  <span className=\"update_frequecy\">{item.updateFrequency}</span>\r\n                </div>\r\n                { renderSongList(item.tracks)}\r\n              </ListItem>\r\n            )\r\n          })\r\n        }\r\n      </List>\r\n    )\r\n  }\r\n\r\n  const enterDetail = (detail) => {\r\n    props.history.push (`/rank/${detail.id}`)\r\n  }\r\n\r\n  const renderSongList = (list) => {\r\n    return list.length ? (\r\n      <SongList>\r\n        {\r\n          list.map((item, index) => {\r\n            return <li key={index}>{index + 1}. {item.first} - {item.second}</li>\r\n          })\r\n        }\r\n      </SongList>\r\n    ) : null;\r\n  }\r\n  let displayStyle = loading ? { \"display\": \"none\" } : { \"display\": \"\" };\r\n\r\n  return (\r\n    <Container>\r\n      <Scroll>\r\n        <div>\r\n          <h1 className=\"offical\" style={displayStyle}> 官方榜 </h1>\r\n          {renderRankList(officialList)}\r\n          <h1 className=\"global\" style={displayStyle}> 全球榜 </h1>\r\n          {renderRankList(globalList, true)}\r\n          {loading ? <EnterLoading><Loading></Loading></EnterLoading> : null}\r\n        </div>\r\n      </Scroll>\r\n      {renderRoutes(props.route.routes)}\r\n    </Container>\r\n  );\r\n}\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state) => ({\r\n  rankList: state.getIn(['rank', 'rankList']),\r\n  loading: state.getIn(['rank', 'loading']),\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getRankListDataDispatch() {\r\n      dispatch(getRankList());\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Rank));"],"sourceRoot":""}