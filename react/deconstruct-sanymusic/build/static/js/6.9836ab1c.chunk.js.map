{"version":3,"sources":["baseUI/music-note/index.js","baseUI/header/index.js","application/SongList/style.js","application/SongList/index.js","application/Album/style.js","application/Album/index.js"],"names":["Container","styled","div","style","MusicNote","forwardRef","props","ref","iconsRef","useRef","transform","prefixStyle","createNode","txt","template","tempNode","document","createElement","innerHTML","firstChild","useEffect","i","node","current","appendChild","slice","call","children","forEach","item","running","addEventListener","this","querySelector","startAnimation","x","y","left","top","display","setTimeout","useImperativeHandle","React","memo","HeaderContainer","marquee","keyframes","Marquee","Header","handleClick","title","isMarquee","className","onClick","defaultProps","SongList","showBackground","SongItem","ul","noWrap","SongsList","refs","count","collectCount","showCollect","songs","changePlayListDispatch","changeCurrentIndexDispatch","changeSequecePlayListDispatch","musicAnimation","totalCount","length","selectItem","e","index","nativeEvent","clientX","clientY","Math","floor","list","res","push","key","id","name","ar","getName","artists","al","album","songList","connect","dispatch","data","changePlayList","changeCurrentIndex","changeSequecePlayList","TopDesc","background","Menu","state","currentAlbum","getIn","enterLoading","getAlbumDataDispatch","changeEnterLoading","getAlbumList","useState","showStatus","setShowStatus","setTitle","setIsMarquee","headerEl","musicNoteRef","match","params","currentAlbumImmutable","toJS","handleBack","useCallback","handleScroll","pos","minScrollY","HEADER_HEIGHT","percent","abs","headerDom","backgroundColor","opacity","min","CSSTransition","in","timeout","classNames","appear","unmountOnExit","onExited","history","goBack","isEmptyObject","bounceTop","onScroll","coverImgUrl","src","alt","subscribedCount","creator","avatarUrl","nickname","tracks"],"mappings":"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","file":"static/js/6.9836ab1c.chunk.js","sourcesContent":["import React, { useEffect, useImperativeHandle, useRef, forwardRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { prefixStyle } from './../../api/utils';\r\nimport style from '../../assets/global-style';\r\n\r\nconst Container = styled.div`\r\n  .icon_wrapper {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    margin-top: -10px;\r\n    margin-left: -10px;\r\n    color: ${style[\"theme-color\"]};\r\n    font-size: 14px;\r\n    display: none;\r\n    transition: transform 1s cubic-bezier(.62,-0.1,.86,.57);\r\n    transform: translate3d(0, 0, 0);\r\n    >div {\r\n      transition: transform 1s;\r\n    }\r\n  }\r\n`\r\n\r\nconst MusicNote = forwardRef((props, ref) => {\r\n\r\n    const iconsRef = useRef();\r\n    // 容器中有 3 个音符，也就是同时只能有 3 个音符下落\r\n    const ICON_NUMBER = 3;\r\n\r\n    const transform = prefixStyle(\"transform\");\r\n\r\n    // 原生 DOM 操作，返回一个 DOM 节点对象\r\n    const createNode = (txt) => {\r\n        const template = `<div class='icon_wrapper'>${txt}</div>`;\r\n        let tempNode = document.createElement('div');\r\n        tempNode.innerHTML = template;\r\n        return tempNode.firstChild;\r\n    }\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < ICON_NUMBER; i++) {\r\n            let node = createNode(`<div class=\"iconfont\">&#xe642;</div>`);\r\n            iconsRef.current.appendChild(node);\r\n        }\r\n        // 类数组转换成数组，当然也可以用 [...xxx] 解构语法或者 Array.from ()\r\n        let domArray = [].slice.call(iconsRef.current.children);\r\n        domArray.forEach(item => {\r\n            item.running = false;\r\n            item.addEventListener('transitionend', function () {\r\n                this.style['display'] = 'none';\r\n                this.style[transform] = `translate3d(0, 0, 0)`;\r\n                this.running = false;\r\n\r\n                let icon = this.querySelector('div');\r\n                icon.style[transform] = `translate3d(0, 0, 0)`;\r\n            }, false);\r\n        });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const startAnimation = ({ x, y }) => {\r\n        for (let i = 0; i < ICON_NUMBER; i++) {\r\n            let domArray = [].slice.call(iconsRef.current.children)\r\n            let item = domArray[i]\r\n            // 选择一个空闲的元素来开始动画\r\n            if (item.running === false) {\r\n                item.style.left = x + \"px\";\r\n                item.style.top = y + \"px\";\r\n                item.style.display = \"inline-block\";\r\n\r\n                setTimeout(() => {\r\n                    item.running = true;\r\n                    item.style[transform] = `translate3d(0, 750px, 0)`;\r\n                    let icon = item.querySelector(\"div\");\r\n                    icon.style[transform] = `translate3d(-40px, 0, 0)`;\r\n                }, 20);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    // 外界调用的 ref 方法\r\n    useImperativeHandle(ref, () => ({\r\n        startAnimation\r\n    }));\r\n\r\n    return (\r\n        <Container ref={iconsRef}>\r\n        </Container>\r\n    )\r\n})\r\n\r\nexport default React.memo(MusicNote);","import React from 'react';\r\nimport styled,{keyframes} from 'styled-components';\r\nimport style from '../../assets/global-style';\r\nimport PropTypes from \"prop-types\";\r\n// import Marquee from './Marquee'\r\n\r\nconst HeaderContainer = styled.div`\r\n  position: fixed;\r\n  padding: 5px 10px;\r\n  padding-top: 0;\r\n  height: 40px;\r\n  width: 100%;\r\n  z-index: 100;\r\n  display: flex;\r\n  line-height: 40px;\r\n  color: ${style[\"font-color-light\"]};\r\n  .back {\r\n    margin-right: 5px;\r\n    font-size: 20px;\r\n    width: 20px;\r\n  }\r\n  >h1 {\r\n    font-size: ${style[\"font-size-l\"]};\r\n    font-weight: 700;\r\n  }\r\n`\r\n\r\nconst marquee = keyframes`\r\nfrom {\r\n  left: 100%;\r\n  transform: translateX(100%);\r\n  }\r\nto {\r\n  left: -100%;\r\n  transform: translateX(-100%);\r\n  }\r\n}\r\n`\r\n\r\nconst Marquee = styled.div`\r\nwidth: 100%;\r\nheight: 35px;\r\noverflow: hidden;\r\nposition: relative;\r\nwhite-space: nowrap;\r\n.text {\r\n  position: absolute;\r\n  animation: ${marquee} 10s linear infinite;\r\n  }\r\n`\r\n\r\n\r\n\r\n// 处理函数组件拿不到 ref 的问题，所以用 forwardRef\r\nconst Header = React.forwardRef((props, ref) => {\r\n  const { handleClick, title, isMarquee} = props;\r\n  return (\r\n    <HeaderContainer ref={ref}>\r\n      <i className=\"iconfont back\"  onClick={handleClick}>&#xe655;</i>\r\n      {\r\n        isMarquee ? <Marquee><h1 className='text'>{title}</h1></Marquee>:\r\n        <h1>{title}</h1>\r\n      }\r\n    </HeaderContainer>\r\n  )\r\n})\r\n\r\nHeader.defaultProps = {\r\n    handleClick: () => { },\r\n    title: \"标题\",\r\n    isMarquee: false\r\n};\r\n\r\nHeader.propTypes = {\r\n    handleClick: PropTypes.func,\r\n    title: PropTypes.string,\r\n    isMarquee: PropTypes.bool\r\n};\r\n\r\nexport default React.memo(Header);","import styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nexport const SongList = styled.div`\r\n  border-radius: 10px;\r\n  opacity: 0.98;\r\n  // 注意在这里背景改为自配置参数控制\r\n  ${props => props.showBackground ? `background: ${style[\"highlight-background-color\"]};` : \"\"}\r\n  .first_line {\r\n    box-sizing: border-box;\r\n    padding: 10px 0;\r\n    margin-left: 10px;\r\n    position: relative;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid ${style[\"border-color\"]};\r\n    .play_all {\r\n      display: inline-block;\r\n      line-height: 24px;\r\n      color: ${style[\"font-color-desc\"]};\r\n      .iconfont {\r\n        font-size: 24px;\r\n        margin-right: 10px;\r\n        vertical-align: top;\r\n      }\r\n      .sum {\r\n        font-size: ${style[\"font-size-s\"]};\r\n        color: ${style[\"font-color-desc-v2\"]};\r\n      }\r\n      >span {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n    .add_list,.isCollected {\r\n      display: flex;\r\n      align-items: center;\r\n      position: absolute;\r\n      right: 0; top :0; bottom: 0;\r\n      width: 130px;\r\n      line-height: 34px;\r\n      background: ${style[\"theme-color\"]};\r\n      color: ${style[\"font-color-light\"]};\r\n      font-size: 0;\r\n      border-radius: 3px;\r\n      vertical-align: top;\r\n      .iconfont {\r\n        vertical-align: top;\r\n        font-size: 10px;\r\n        margin: 0 5px 0 10px;\r\n      }\r\n      span {\r\n        font-size: 14px;\r\n        line-height: 34px;\r\n      }\r\n    }\r\n    .isCollected {\r\n      display: flex;\r\n      background: ${style[\"background-color\"]};\r\n      color: ${style[\"font-color-desc\"]};\r\n    }\r\n}\r\n`\r\nexport const SongItem = styled.ul`\r\n  >li {\r\n    display: flex;\r\n    height: 60px;\r\n    align-items: center;  \r\n    .index {\r\n      flex-basis: 60px;\r\n      width: 60px;\r\n      height: 60px;\r\n      line-height: 60px;\r\n      text-align: center;\r\n    }\r\n    .info {\r\n      box-sizing: border-box;\r\n      flex: 1;\r\n      display: flex;\r\n      height: 100%;\r\n      padding: 5px 0;\r\n      flex-direction: column;\r\n      justify-content: space-around;\r\n      border-bottom: 1px solid ${style[\"border-color\"]};\r\n      ${style.noWrap()}\r\n      >span {\r\n        ${style.noWrap()}\r\n      }\r\n      >span:first-child {\r\n        color: ${style[\"font-color-desc\"]};\r\n      }\r\n      >span:last-child {\r\n        font-size: ${style[\"font-size-s\"]};\r\n        color: #bba8a8;\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport { SongList, SongItem } from \"./style\";\r\nimport { getName } from '../../api/utils';\r\nimport { changePlayList, changeCurrentIndex, changeSequecePlayList } from './../../application/Player/store/actionCreators';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongsList = React.forwardRef((props, refs) => {\r\n\r\n    const { collectCount, showCollect, songs } = props;\r\n    const { changePlayListDispatch, changeCurrentIndexDispatch, changeSequecePlayListDispatch } = props;\r\n    // 接受触发动画的函数\r\nconst { musicAnimation } = props;\r\n\r\n    const totalCount = songs.length;\r\n\r\n    const selectItem = (e, index) => {\r\n        // console.log(e)\r\n        changePlayListDispatch (songs);\r\n        changeSequecePlayListDispatch (songs);\r\n        changeCurrentIndexDispatch (index);\r\n        musicAnimation(e.nativeEvent.clientX, e.nativeEvent.clientY);\r\n      }\r\n\r\n    let songList = (list) => {\r\n        let res = [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            let item = list[i];\r\n            res.push(\r\n                <li key={item.id} onClick={(e) => selectItem(e, i)}>\r\n                    <span className=\"index\">{i+1}</span>\r\n                    <div className=\"info\">\r\n                        <span>{item.name}</span>\r\n                        <span>\r\n                            {item.ar ? getName(item.ar) : getName(item.artists)} - {item.al ? item.al.name : item.album.name}\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n            )\r\n        }\r\n        return res;\r\n    };\r\n\r\n    const collect = (count) => {\r\n        return (\r\n            <div className=\"add_list\">\r\n                <i className=\"iconfont\">&#xe62d;</i>\r\n                <span > 收藏 ({Math.floor(count / 1000) / 10} 万)</span>\r\n            </div>\r\n        )\r\n    };\r\n    return (\r\n        <SongList ref={refs} showBackground={props.showBackground}>\r\n            <div className=\"first_line\">\r\n                <div className=\"play_all\" onClick={e => selectItem(e, 0)}>\r\n                    <i className=\"iconfont\">&#xe6e3;</i>\r\n                    <span > 播放全部 <span className=\"sum\">(共 {totalCount} 首)</span></span>\r\n                </div>\r\n                {showCollect ? collect(collectCount) : null}\r\n            </div>\r\n            <SongItem>\r\n                {songList(songs)}\r\n            </SongItem>\r\n        </SongList>\r\n    )\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      changePlayListDispatch (data){\r\n        dispatch (changePlayList (data));\r\n      },\r\n      changeCurrentIndexDispatch (data) {\r\n        dispatch (changeCurrentIndex (data));\r\n      },\r\n      changeSequecePlayListDispatch (data) {\r\n        dispatch (changeSequecePlayList (data))\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 将 ui 组件包装成容器组件\r\n  export default connect (null, mapDispatchToProps)(React.memo (SongsList));","import styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\n\r\nexport const Container = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  background: ${style['highlight-background-color']};\r\n  transform-origin: right bottom;\r\n  &.fly-enter, &.fly-appear{\r\n    transform: rotateZ(30deg) translate3d(100%, 0, 0);\r\n  }\r\n  &.fly-enter-active, &.fly-appear-active{\r\n    transition: transform .3s;\r\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\r\n  }\r\n  &.fly-exit{\r\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\r\n  }\r\n  &.fly-exit-active{\r\n    transition: transform .3s;\r\n    transform: rotateZ(30deg) translate3d(100%, 0, 0);\r\n  }\r\n`;\r\n// transform-origin: right bottom;\r\n// &.fly-enter, &.fly-appear {\r\n//   transform: translate3d (100%, 0, 0);\r\n// }\r\n// &.fly-enter-active, &.fly-appear-active {\r\n//   transition: transform .3s;\r\n//   transform: translate3d (0, 0, 0);\r\n// }\r\n// &.fly-exit {\r\n//   transform: translate3d (0, 0, 0);\r\n// }\r\n// &.fly-exit-active {\r\n//   transition: transform .3s;\r\n//   transform: translate3d (100%, 0, 0);\r\n// }\r\n\r\nexport const TopDesc = styled.div`\r\n  background-size: 100%;\r\n  padding: 5px 20px;\r\n  padding-bottom: 50px;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 275px;\r\n  position: relative;\r\n  .background {\r\n    z-index: -1;\r\n    background: url(${props => props.background}) no-repeat;\r\n    background-position: 0 0;\r\n    background-size: 100% 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    filter: blur(20px);\r\n    .filter {\r\n      position: absolute;\r\n      z-index: 10;\r\n      top: 0; left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(7, 17, 27, 0.2);\r\n    }\r\n  }\r\n  .img_wrapper {\r\n    width: 120px;\r\n    height: 120px;\r\n    position: relative;         \r\n    .decorate {\r\n      position: absolute;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 35px;\r\n      border-radius: 3px;\r\n      background: linear-gradient(hsla(0,0%,43%,.4),hsla(0,0%,100%,0));\r\n    }\r\n    .play_count {\r\n      position: absolute;\r\n      right: 2px;\r\n      top: 2px;\r\n      font-size: ${style[\"font-size-s\"]};\r\n      line-height: 15px;\r\n      color: ${style[\"font-color-light\"]};\r\n      .play {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n    img {\r\n      width: 120px;\r\n      height: 120px;\r\n      border-radius:3px;\r\n    }\r\n  }\r\n  .desc_wrapper {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    height: 120px;\r\n    padding: 0 10px;\r\n    .title {\r\n      max-height: 70px;\r\n      color: ${style[\"font-color-light\"]};\r\n      font-weight: 700;\r\n      line-height: 1.5;\r\n      font-size: ${style[\"font-size-l\"]};\r\n    }\r\n    .person {\r\n      display: flex;\r\n      .avatar {\r\n        width: 20px;\r\n        height: 20px;\r\n        margin-right: 5px;\r\n        img {\r\n          width: 100%;\r\n          height: 100%;\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n      .name {\r\n        line-height: 20px;\r\n        font-size: ${style[\"font-size-m\"]};\r\n        color: ${style[\"font-color-desc-v2\"]};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Menu = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n  padding: 0 30px 20px 30px;\r\n  margin: -100px 0 0 0;\r\n  >div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    font-size: ${style[\"font-size-s\"]};\r\n    color: ${style[\"font-color-light\"]};\r\n    z-index:1000;\r\n    font-weight: 500;\r\n    .iconfont {\r\n      font-size: 20px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const SongList = styled.div`\r\n  border-radius: 10px;\r\n  opacity: 0.98;\r\n  ${props => props.showBackground ? `background: ${style[\"highlight-background-color\"]}` : \"\"}\r\n  .first_line {\r\n    box-sizing: border-box;\r\n    padding: 10px 0;\r\n    margin-left: 10px;\r\n    position: relative;\r\n    justify-content: space-between;\r\n    border-bottom: 1px solid ${style[\"border-color\"]};\r\n    .play_all {\r\n      display: inline-block;\r\n      line-height: 24px;\r\n      color: ${style[\"font-color-desc\"]};\r\n      .iconfont {\r\n        font-size: 24px;\r\n        margin-right: 10px;\r\n        vertical-align: top;\r\n      }\r\n      .sum {\r\n        font-size: ${style[\"font-size-s\"]};\r\n        color: ${style[\"font-color-desc-v2\"]};\r\n      }\r\n      >span {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n    .add_list,.isCollected {\r\n      display: flex;\r\n      align-items: center;\r\n      position: absolute;\r\n      right: 0; top :0; bottom: 0;\r\n      width: 130px;\r\n      line-height: 34px;\r\n      background: ${style[\"theme-color\"]};\r\n      color: ${style[\"font-color-light\"]};\r\n      font-size: 0;\r\n      border-radius: 3px;\r\n      vertical-align: top;\r\n      .iconfont {\r\n        vertical-align: top;\r\n        font-size: 10px;\r\n        margin: 0 5px 0 10px;\r\n      }\r\n      span {\r\n        font-size: 14px;\r\n        line-height: 34px;\r\n      }\r\n    }\r\n    .isCollected {\r\n      display: flex;\r\n      background: ${style[\"background-color\"]};\r\n      color: ${style[\"font-color-desc\"]};\r\n    }\r\n}\r\n`\r\nexport const SongItem = styled.ul`\r\n  >li {\r\n    display: flex;\r\n    height: 60px;\r\n    align-items: center;  \r\n    .index {\r\n      flex-basis: 60px;\r\n      width: 60px;\r\n      height: 60px;\r\n      line-height: 60px;\r\n      text-align: center;\r\n    }\r\n    .info {\r\n      box-sizing: border-box;\r\n      flex: 1;\r\n      display: flex;\r\n      height: 100%;\r\n      padding: 5px 0;\r\n      flex-direction: column;\r\n      justify-content: space-around;\r\n      border-bottom: 1px solid ${style[\"border-color\"]};\r\n      ${style.noWrap()}\r\n      >span {\r\n        ${style.noWrap()}\r\n      }\r\n      >span:first-child {\r\n        color: ${style[\"font-color-desc\"]};\r\n      }\r\n      >span:last-child {\r\n        font-size: ${style[\"font-size-s\"]};\r\n        color: #bba8a8;\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { Container, TopDesc, Menu,\r\n    //  SongList, SongItem \r\n    } from './style';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Header from './../../baseUI/header/index';\r\nimport Scroll from '../../baseUI/scroll/index';\r\nimport { getCount,isEmptyObject, getName } from '../../api/utils';\r\nimport { HEADER_HEIGHT } from './../../api/config';\r\nimport style from \"../../assets/global-style\";\r\nimport { connect } from 'react-redux';\r\nimport { getAlbumList, changeEnterLoading } from './store/actionCreators';\r\nimport Loading from '../../baseUI/loading/index';\r\nimport SongsList from '../SongList';\r\nimport MusicNote from \"../../baseUI/music-note/index\";\r\n\r\n\r\n//mock 数据\r\n// const currentAlbum = {\r\n//     creator: {\r\n//         avatarUrl: \"http://p1.music.126.net/O9zV6jeawR43pfiK2JaVSw==/109951164232128905.jpg\",\r\n//         nickname: \"浪里推舟\"\r\n//     },\r\n//     coverImgUrl: \"http://p2.music.126.net/ecpXnH13-0QWpWQmqlR0gw==/109951164354856816.jpg\",\r\n//     subscribedCount: 2010711,\r\n//     name: \"听完就睡，耳机是天黑以后柔软的梦境\",\r\n//     tracks: [\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//         {\r\n//             name: \"我真的受伤了\",\r\n//             ar: [{ name: \"张学友\" }, { name: \"周华健\" }],\r\n//             al: {\r\n//                 name: \"学友 热\"\r\n//             }\r\n//         },\r\n//     ]\r\n// }\r\n\r\nfunction Album(props) {\r\n    const [showStatus, setShowStatus] = useState(true);\r\n    const [title, setTitle] = useState(\"歌单\");\r\n    const [isMarquee, setIsMarquee] = useState(false);// 是否跑马灯\r\n    const headerEl = useRef();\r\n    const musicNoteRef = useRef ();\r\n\r\n    const id = props.match.params.id;\r\n\r\n    const {getAlbumDataDispatch} = props\r\n    const {enterLoading,currentAlbum:currentAlbumImmutable} = props\r\n\r\n    useEffect(() => {\r\n        getAlbumDataDispatch(id)\r\n    }, [getAlbumDataDispatch,id])\r\n\r\n   \r\n    let currentAlbum = currentAlbumImmutable.toJS();\r\n\r\n    const musicAnimation = (x, y) => {\r\n        musicNoteRef.current.startAnimation ({ x, y });\r\n      };\r\n\r\n    const handleBack = useCallback(() => {\r\n        setShowStatus(false);\r\n    },[]);\r\n\r\n\r\n\r\n    const handleScroll = useCallback((pos) => {\r\n        let minScrollY = -HEADER_HEIGHT;\r\n        let percent = Math.abs(pos.y / minScrollY);\r\n        let headerDom = headerEl.current;\r\n        // 滑过顶部的高度开始变化\r\n        if (pos.y < minScrollY) {\r\n            headerDom.style.backgroundColor = style[\"theme-color\"];\r\n            headerDom.style.opacity = Math.min(1, (percent - 1) / 2);\r\n            setTitle(currentAlbum.name);\r\n            setIsMarquee(true);\r\n        } else {\r\n            headerDom.style.backgroundColor = \"\";\r\n            headerDom.style.opacity = 1;\r\n            setTitle(\"歌单\");\r\n            setIsMarquee(false);\r\n        }\r\n    },[currentAlbum]);\r\n\r\n    const renderTopDesc = ()=>{\r\n        return(\r\n            <TopDesc background={currentAlbum.coverImgUrl}>\r\n                            <div className=\"background\">\r\n                                <div className=\"filter\"></div>\r\n                            </div>\r\n                            <div className=\"img_wrapper\">\r\n                                <div className=\"decorate\"></div>\r\n                                <img src={currentAlbum.coverImgUrl} alt=\"\" />\r\n                                <div className=\"play_count\">\r\n                                    <i className=\"iconfont play\">&#xe885;</i>\r\n                                    <span className=\"count\">{Math.floor(currentAlbum.subscribedCount / 1000) / 10} 万 </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"desc_wrapper\">\r\n                                <div className=\"title\">{currentAlbum.name}</div>\r\n                                <div className=\"person\">\r\n                                    <div className=\"avatar\">\r\n                                        <img src={currentAlbum.creator.avatarUrl} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"name\">{currentAlbum.creator.nickname}</div>\r\n                                </div>\r\n                            </div>\r\n                        </TopDesc>\r\n        )\r\n    }\r\n\r\n    const renderMenu = () =>{\r\n        return(\r\n            <Menu>\r\n                            <div>\r\n                                <i className=\"iconfont\">&#xe6ad;</i>\r\n                                评论\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"iconfont\">&#xe86f;</i>\r\n                                点赞\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"iconfont\">&#xe62d;</i>\r\n                                收藏\r\n                            </div>\r\n                            <div>\r\n                                <i className=\"iconfont\">&#xe606;</i>\r\n                                更多\r\n                            </div>\r\n                        </Menu>\r\n        )\r\n    }\r\n\r\n    // const renderSongList = () =>(\r\n    //     <SongList>\r\n    //                         <div className=\"first_line\">\r\n    //                             <div className=\"play_all\">\r\n    //                                 <i className=\"iconfont\">&#xe6e3;</i>\r\n    //                                 <span > 播放全部 <span className=\"sum\">(共 {currentAlbum.tracks.length} 首)</span></span>\r\n    //                             </div>\r\n    //                             <div className=\"add_list\">\r\n    //                                 <i className=\"iconfont\">&#xe62d;</i>\r\n    //                                 <span > 收藏 ({getCount(currentAlbum.subscribedCount)})</span>\r\n    //                             </div>\r\n    //                         </div>\r\n    //                         <SongItem>\r\n    //                             {\r\n    //                                 currentAlbum.tracks.map((item, index) => {\r\n    //                                     return (\r\n    //                                         <li key={index}>\r\n    //                                             <span className=\"index\">{index + 1}</span>\r\n    //                                             <div className=\"info\">\r\n    //                                                 <span>{item.name}</span>\r\n    //                                                 <span>\r\n    //                                                     {getName(item.ar)} - {item.al.name}\r\n    //                                                 </span>\r\n    //                                             </div>\r\n    //                                         </li>\r\n    //                                     )\r\n    //                                 })\r\n    //                             }\r\n    //                         </SongItem>\r\n    //                     </SongList>\r\n    // )\r\n\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={showStatus}\r\n            timeout={500}\r\n            classNames=\"fly\"\r\n            appear={true}\r\n            unmountOnExit\r\n            onExited={props.history.goBack}\r\n        >\r\n            <Container>\r\n                <Header ref={headerEl} title={title} handleClick={handleBack} isMarquee={isMarquee} ></Header>\r\n                {\r\n                    !isEmptyObject (currentAlbum) ? (\r\n                    \r\n                <Scroll bounceTop={false} onScroll={handleScroll}>\r\n                    <div>\r\n                        {renderTopDesc()}\r\n                        {renderMenu()}\r\n                        {/* {renderSongList()} */}\r\n                        <SongsList\r\n                            songs={currentAlbum.tracks}\r\n                            showCollect={true}\r\n                            collectCount={currentAlbum.subscribedCount}\r\n                            musicAnimation={musicAnimation}\r\n                        ></SongsList>\r\n                    </div>\r\n                </Scroll>) : null\r\n                }\r\n                { enterLoading ? <Loading></Loading> : null}\r\n                <MusicNote ref={musicNoteRef}></MusicNote>\r\n            </Container>\r\n        </CSSTransition>\r\n    )\r\n\r\n}\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state) => ({\r\n    currentAlbum: state.getIn(['album', 'currentAlbum']),\r\n    enterLoading: state.getIn(['album', 'enterLoading']),\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAlbumDataDispatch(id) {\r\n            dispatch(changeEnterLoading(true));\r\n            dispatch(getAlbumList(id));\r\n        },\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Album));"],"sourceRoot":""}