{"version":3,"sources":["assets/global-style.js","api/config.js","application/Player/store/actionCreators.js","api/request.js","assets/iconfont/iconfont.js","style.js","application/Home/style.js","application/Player/miniPlayer/style.js","baseUI/progress-circle/index.js","application/Player/miniPlayer/index.js","application/Player/normalPlayer/style.js","baseUI/progressBar/index.js","application/Player/normalPlayer/index.js","baseUI/Toast/index.js","application/Player/play-list/style.js","baseUI/confirm/index.js","application/Player/play-list/index.js","api/lyric-parser.js","application/Player/index.js","application/Home/index.js","routes/index.js","application/Recommend/store/reducer.js","application/Singers/store/reducer.js","application/Album/store/reducer.js","application/Singer/store/reducer.js","application/Player/store/reducer.js","application/Search/store/reducer.js","store/reducer.js","store/index.js","App.js","serviceWorker.js","index.js","application/Search/store/constants.js","application/Singers/store/constants.js","application/Recommend/store/constants.js","application/Singer/store/constants.js","application/Album/store/constants.js","baseUI/loading-v2/index.js","baseUI/scroll/index.js","baseUI/loading/index.js","application/Recommend/store/actionCreators.js","application/Singers/store/actionCreators.js","application/Album/store/actionCreators.js","application/Singer/store/actionCreators.js","application/Search/store/actionCreators.js","api/utils.js","application/Singers/data.js","application/Rank/store/reducer.js","application/Rank/store/constants.js","application/Rank/store/actionCreators.js","application/Player/store/constants.js"],"names":["extendClick","noWrap","axiosInstance","axios","create","baseURL","interceptors","response","use","res","data","err","console","log","playMode","sequence","loop","random","HEADER_HEIGHT","categoryTypes","name","key","alphaTypes","changeCurrentSong","type","SET_CURRENT_SONG","fromJS","changeFullScreen","SET_FULL_SCREEN","changePlayingState","SET_PLAYING_STATE","changeSequecePlayList","SET_SEQUECE_PLAYLIST","changePlayList","SET_PLAYLIST","changePlayMode","SET_PLAY_MODE","changeCurrentIndex","SET_CURRENT_INDEX","changeShowPlayList","SET_SHOW_PLAYLIST","deleteSong","DELETE_SONG","getSongDetail","id","dispatch","getSongDetailRequest","then","song","songs","INSERT_SONG","insertSong","getBannerRequest","get","getRecommendListRequest","getHotSingerListRequest","count","getSingerListRequest","category","alpha","toLowerCase","getRankListRequest","getAlbumDetailRequest","getSingerInfoRequest","getLyricRequest","getHotKeyWordsRequest","getSuggestListRequest","query","getResultSongsListRequest","IconStyle","createGlobalStyle","GlobalStyle","Top","styled","div","style","Tab","TabItem","rotate","keyframes","MiniPlayerContainer","CircleWrapper","React","memo","props","radius","percent","dashArray","Math","PI","dashOffset","width","height","viewBox","version","xmlns","className","r","cx","cy","fill","strokeDasharray","strokeDashoffset","children","fullScreen","playing","clickPlaying","toggleFullScreen","togglePlayList","miniPlayerRef","useRef","CSSTransition","in","timeout","classNames","onEnter","current","display","onExited","ref","onClick","src","al","picUrl","alt","getName","ar","e","stopPropagation","NormalPlayerContainer","Middle","CDWrapper","Bottom","ProgressWrapper","Operators","LyricContainer","LyricWrapper","ProgressBarWrapper","ProgressBar","percentChange","progressBar","progress","progressBtn","useState","touch","setTouch","transform","prefixStyle","useEffect","initiated","barWidth","clientWidth","offsetWidth","_offset","_changePercent","curPercent","rect","getBoundingClientRect","pageX","left","onTouchStart","startTouch","startX","touches","onTouchMove","deltaX","min","max","onTouchEnd","endTouch","JSON","parse","stringify","duration","currentTime","mode","currentLineNum","currentPlayingLyric","currentLyric","onProgressChange","handlePrev","handleNext","changeMode","normalPlayerRef","cdWrapperRef","currentState","lyricScrollRef","lyricLineRefs","bScroll","getBScroll","lineEl","scrollToElement","scrollTo","_getPosAndScale","window","innerWidth","scale","x","y","innerHeight","mountOnEnter","animation","0","60","100","animations","registerAnimation","presets","easing","runAnimation","onEntered","cdWrapperDom","unregisterAnimation","onExit","transition","visibility","lines","map","item","index","createRef","txt","formatPlayTime","dangerouslySetInnerHTML","__html","ToastWrapper","Toast","forwardRef","show","setShow","timer","setTimer","text","useImperativeHandle","clearTimeout","setTimeout","unmountOnExit","PlayListWrapper","ScrollWrapper","ListHeader","ListContent","confirmFadeIn","confirmZoom","ConfirmWrapper","Confirm","cancelBtnText","confirmBtnText","handleConfirm","appear","connect","state","currentIndex","getIn","currentSong","playList","sequencePlayList","showPlayList","togglePlayListDispatch","changeCurrentIndexDispatch","changeModeDispatch","changePlayListDispatch","deleteSongDispatch","clearDispatch","immutableCurrentSong","immutablePlayList","immutableSequencePlayList","toJS","canTouch","setCanTouch","confirmRef","playListRef","listWrapperRef","listContentRef","isShow","setIsShow","startY","setStartY","initialed","setInitialed","distance","setDistance","onEnterCB","useCallback","onEnteringCB","onExitingCB","onExitedCB","newMode","findIndex","newList","shuffle","onEntering","onExiting","nativeEvent","pageY","content","getPlayMode","onScroll","pos","handleScroll","bounceTop","handleChangeCurrentIndex","getCurrentIcon","handleDeleteSong","timeExp","Lyric","lrc","hanlder","this","handler","curLineIndex","startStamp","_initLines","split","i","length","line","result","exec","replace","trim","push","time","sort","a","b","offset","isSeek","_findcurLineIndex","_callHandler","Date","_playRest","lineNum","delay","preTime","play","togglePlayingDispatch","toggleFullScreenDispatch","changeCurrentDispatch","setPlayingLyric","songReady","modeText","setModeText","toastRef","preSong","setPreSong","audioRef","setCurrentTime","setDuration","isNaN","getSongUrl","getLyric","dt","pause","togglePlay","handleLoop","handleLyric","lyric","stop","seek","catch","isEmptyObject","newTime","onTimeUpdate","target","onEnded","onError","route","history","to","activeClassName","renderRoutes","routes","RecommendComponent","lazy","SingersComponent","RankComponent","AlbumComponent","SingerComponent","SearchComponent","SuspenseComponent","Component","fallback","path","component","Home","exact","render","defaultState","bannerList","recommendList","enterLoading","singerList","pullUpLoading","pullDownLoading","pageCount","currentAlbum","artist","songsOfArtist","loading","sequenceList","fpIndex","splice","fsIndex","merge","handleInsertSong","sequenceIndex","hotList","suggestList","songsList","combineReducers","recommend","action","actionTypes","set","singers","rank","rankReducer","album","singerInfo","player","search","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","SET_HOT_KEYWRODS","SET_SUGGEST_LIST","SET_RESULT_SONGS_LIST","SET_ENTER_LOADING","CHANGE_SINGER_LIST","CHANGE_PAGE_COUNT","CHANGE_ENTER_LOADING","CHANGE_PULLUP_LOADING","CHANGE_PULLDOWN_LOADING","CHANGE_BANNER","CHANGE_RECOMMEND_LIST","CHANGE_ARTIST","CHANGE_SONGS_OF_ARTIST","CHANGE_CURRENT_ALBUM","dance","Loading","ScrollContainer","PullUpLoading","PullDownLoading","Scroll","setBScroll","scrollContaninerRef","direction","click","refresh","bounceBottom","pullUp","pullDown","PullUpdisplayStyle","PullDowndisplayStyle","pullUpDebounce","useMemo","debounce","pullDownDebounce","scroll","BScroll","scrollX","scrollY","probeType","bounce","top","bottom","on","off","maxScrollY","defaultProps","LoadingWrapper","getBannerList","changeBannerList","banners","getRecommendList","changeRecommendList","chageEnterLoading","changeSingerList","changePageCount","changeEnterLoading","changePullUpLoading","changePullDownLoading","getHotSingerList","artists","refreshMoreHotSingerList","getState","getSingerList","refreshMoreSingerList","getAlbumList","playlist","changeCurrentAlbum","getSingerInfo","changeArtist","changeSongs","hotSongs","getHotKeyWords","list","hots","changeHotKeyWords","getSuggestList","changeSuggestList","changeResultSongs","getCount","floor","func","args","apply","filterIndex","rankList","tracks","str","obj","Object","keys","elementStyle","createElement","vendor","transformNames","webkit","Moz","O","ms","standard","undefined","charAt","toUpperCase","substr","interval","minute","second","toString","padStart","arr","new_arr","forEach","j","t","CategoryDataContext","createContext","CHANGE_CATEGORY","CHANGE_ALPHA","Data","useReducer","Provider","value","getRankList","changeRankList","changeLoading"],"mappings":"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","file":"static/js/main.56162d40.chunk.js","sourcesContent":["// 扩大可点击区域\r\nconst extendClick = () => {\r\n    return `\r\n      position: relative;\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: -10px; bottom: -10px; left: -10px; right: -10px;\r\n      };\r\n    `\r\n  }\r\n  // 一行文字溢出部分用... 代替\r\n  const noWrap = () => {\r\n    return `\r\n      text-overflow: ellipsis;\r\n      overflow: hidden;\r\n      white-space: nowrap;\r\n    `\r\n  }\r\n  \r\n  export default {\r\n    'theme-color': '#d44439',\r\n    'theme-color-shadow': 'rgba(212, 68, 57, .5)',\r\n    'font-color-light': '#f1f1f1',\r\n    'font-color-desc': '#2E3030',\r\n    'font-color-desc-v2': '#bba8a8',// 略淡\r\n    'font-size-ss': '10px',\r\n    'font-size-s': '12px',\r\n    'font-size-m': '14px',\r\n    'font-size-l': '16px',\r\n    'font-size-ll': '18px',\r\n    \"border-color\": '#e4e4e4',\r\n    'background-color': '#f2f3f4',\r\n    'background-color-shadow': 'rgba(0, 0, 0, 0.3)',\r\n    'highlight-background-color': '#fff',\r\n    extendClick,\r\n    noWrap\r\n  }","import axios from 'axios';\r\n\r\nexport const baseUrl = 'http://localhost:3000';\r\nexport const prod_base_url = '/api'\r\nexport const proxy = '&proxy=http://localhost:3000'\r\n//axios 的实例及拦截器配置\r\nconst axiosInstance = axios.create({\r\n  baseURL: baseUrl\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  res => res.data,\r\n  err => {\r\n    console.log(err, \"网络错误\");\r\n  }\r\n);\r\n\r\nexport {\r\n  axiosInstance\r\n};\r\n\r\n// 播放模式\r\nexport const playMode = {\r\n  sequence: 0,\r\n  loop: 1,\r\n  random: 2\r\n};\r\n\r\n\r\nexport const HEADER_HEIGHT = 45;\r\n\r\n\r\nexport const categoryTypes = [\r\n  {\r\n    name: \"华语男\",\r\n    key: \"1001\"\r\n  },\r\n  {\r\n    name: \"华语女\",\r\n    key: \"1002\"\r\n  },\r\n  {\r\n    name: \"华语组合\",\r\n    key: \"1003\"\r\n  },\r\n  {\r\n    name: \"欧美男\",\r\n    key: \"2001\"\r\n  },\r\n  {\r\n    name: \"欧美女\",\r\n    key: \"2002\"\r\n  },\r\n  {\r\n    name: \"欧美组合\",\r\n    key: \"2003\"\r\n  },\r\n  {\r\n    name: \"日本男\",\r\n    key: \"6001\"\r\n  },\r\n  {\r\n    name: \"日本女\",\r\n    key: \"6002\"\r\n  },\r\n  {\r\n    name: \"日本组合\",\r\n    key: \"6003\"\r\n  },\r\n  {\r\n    name: \"韩国男\",\r\n    key: \"7001\"\r\n  },\r\n  {\r\n    name: \"韩国女\",\r\n    key: \"7002\"\r\n  },\r\n  {\r\n    name: \"韩国组合\",\r\n    key: \"7003\"\r\n  },\r\n  {\r\n    name: \"其他男歌手\",\r\n    key: \"4001\"\r\n  },\r\n  {\r\n    name: \"其他女歌手\",\r\n    key: \"4002\"\r\n  },\r\n  {\r\n    name: \"其他组合\",\r\n    key: \"4003\"\r\n  },\r\n];\r\n\r\n// 歌手首字母\r\nexport const alphaTypes = [{\r\n  key: \"A\",\r\n  name: \"A\"\r\n},\r\n{\r\n  key: \"B\",\r\n  name: \"B\"\r\n},\r\n{\r\n  key: \"C\",\r\n  name: \"C\"\r\n},\r\n{\r\n  key: \"D\",\r\n  name: \"D\"\r\n},\r\n{\r\n  key: \"E\",\r\n  name: \"E\"\r\n},\r\n{\r\n  key: \"F\",\r\n  name: \"F\"\r\n},\r\n{\r\n  key: \"G\",\r\n  name: \"G\"\r\n},\r\n{\r\n  key: \"H\",\r\n  name: \"H\"\r\n},\r\n{\r\n  key: \"I\",\r\n  name: \"I\"\r\n},\r\n{\r\n  key: \"J\",\r\n  name: \"J\"\r\n},\r\n{\r\n  key: \"K\",\r\n  name: \"K\"\r\n},\r\n{\r\n  key: \"L\",\r\n  name: \"L\"\r\n},\r\n{\r\n  key: \"M\",\r\n  name: \"M\"\r\n},\r\n{\r\n  key: \"N\",\r\n  name: \"N\"\r\n},\r\n{\r\n  key: \"O\",\r\n  name: \"O\"\r\n},\r\n{\r\n  key: \"P\",\r\n  name: \"P\"\r\n},\r\n{\r\n  key: \"Q\",\r\n  name: \"Q\"\r\n},\r\n{\r\n  key: \"R\",\r\n  name: \"R\"\r\n},\r\n{\r\n  key: \"S\",\r\n  name: \"S\"\r\n},\r\n{\r\n  key: \"T\",\r\n  name: \"T\"\r\n},\r\n{\r\n  key: \"U\",\r\n  name: \"U\"\r\n},\r\n{\r\n  key: \"V\",\r\n  name: \"V\"\r\n},\r\n{\r\n  key: \"W\",\r\n  name: \"W\"\r\n},\r\n{\r\n  key: \"X\",\r\n  name: \"X\"\r\n},\r\n{\r\n  key: \"Y\",\r\n  name: \"Y\"\r\n},\r\n{\r\n  key: \"Z\",\r\n  name: \"Z\"\r\n}\r\n];\r\n","import { SET_CURRENT_SONG, SET_FULL_SCREEN, SET_PLAYING_STATE, SET_SEQUECE_PLAYLIST, SET_PLAYLIST, SET_PLAY_MODE, SET_CURRENT_INDEX, SET_SHOW_PLAYLIST, DELETE_SONG, INSERT_SONG } from './constants';\r\nimport { fromJS } from 'immutable';\r\nimport { getSongDetailRequest } from '../../../api/request';\r\n\r\nexport const changeCurrentSong = (data) => ({\r\n    type: SET_CURRENT_SONG,\r\n    data: fromJS(data)\r\n});\r\n\r\nexport const changeFullScreen = (data) => ({\r\n    type: SET_FULL_SCREEN,\r\n    data\r\n});\r\n\r\nexport const changePlayingState = (data) => ({\r\n    type: SET_PLAYING_STATE,\r\n    data\r\n});\r\n\r\nexport const changeSequecePlayList = (data) => ({\r\n    type: SET_SEQUECE_PLAYLIST,\r\n    data: fromJS(data)\r\n});\r\n\r\nexport const changePlayList = (data) => ({\r\n    type: SET_PLAYLIST,\r\n    data: fromJS(data)\r\n});\r\n\r\nexport const changePlayMode = (data) => ({\r\n    type: SET_PLAY_MODE,\r\n    data\r\n});\r\n\r\nexport const changeCurrentIndex = (data) => ({\r\n    type: SET_CURRENT_INDEX,\r\n    data\r\n});\r\n\r\nexport const changeShowPlayList = (data) => ({\r\n    type: SET_SHOW_PLAYLIST,\r\n    data\r\n});\r\n\r\nexport const deleteSong = (data) => ({\r\n    type: DELETE_SONG,\r\n    data\r\n});\r\n\r\nexport const insertSong = (data) => ({\r\n    type: INSERT_SONG,\r\n    data\r\n});\r\n\r\nexport const getSongDetail = (id) => {\r\n    return (dispatch) => {\r\n        getSongDetailRequest(id).then(data => {\r\n            let song = data.songs[0];\r\n            dispatch(insertSong(song));\r\n        })\r\n    }\r\n}","import { axiosInstance } from \"./config\";\r\n\r\nexport const getBannerRequest = () => {\r\n  return axiosInstance.get('/banner');\r\n}\r\n\r\nexport const getRecommendListRequest = () => {\r\n  return axiosInstance.get('/personalized');\r\n}\r\n\r\nexport const getHotSingerListRequest = (count) => {\r\n  // console.log(`/top/artists?offset=${count}`)\r\n  return axiosInstance.get(`/top/artists?offset=${count}`);\r\n}\r\n\r\nexport const getSingerListRequest = (category, alpha, count) => {\r\n  // console.log(`/artist/list?cat=${category}&initial=${alpha.toLowerCase()}&offset=${count}`)\r\n  return axiosInstance.get(`/artist/list?cat=${category}&initial=${alpha.toLowerCase()}&offset=${count}`);\r\n}\r\n\r\nexport const getRankListRequest = () => {\r\n  return axiosInstance.get(`/toplist/detail`);\r\n};\r\n\r\nexport const getAlbumDetailRequest = id => {\r\n  return axiosInstance.get(`/playlist/detail?id=${id}`);\r\n};\r\n\r\nexport const getSingerInfoRequest = id => {\r\n  return axiosInstance.get(`/artists?id=${id}`);\r\n};\r\n\r\nexport const getLyricRequest = id => {\r\n  // console.log(`/lyric?id=${id}`)\r\n  return axiosInstance.get(`/lyric?id=${id}`);\r\n};\r\n\r\nexport const getHotKeyWordsRequest = () => {\r\n  return axiosInstance.get(`/search/hot`);\r\n};\r\n\r\nexport const getSuggestListRequest = query => {\r\n  // console.log(`/search/suggest?keywords=${query}`)\r\n  return axiosInstance.get(`/search/suggest?keywords=${query}`);\r\n};\r\n\r\nexport const getResultSongsListRequest = query => {\r\n  return axiosInstance.get(`/search?keywords=${query}`);\r\n};\r\n\r\nexport const getSongDetailRequest = id => {\r\n  return axiosInstance.get (`/song/detail?ids=${id}`);\r\n};","import {createGlobalStyle} from 'styled-components';\r\n\r\nexport const IconStyle = createGlobalStyle`\r\n@font-face {font-family: \"iconfont\";\r\n  src: url('iconfont.eot?t=1565320061289'); /* IE9 */\r\n  src: url('iconfont.eot?t=1565320061289#iefix') format('embedded-opentype'), /* IE6-IE8 */\r\n  url('data:application/x-font-woff2;charset=utf-8;base64,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') format('woff2'),\r\n  url('iconfont.woff?t=1565320061289') format('woff'),\r\n  url('iconfont.ttf?t=1565320061289') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\r\n  url('iconfont.svg?t=1565320061289#iconfont') format('svg'); /* iOS 4.1- */\r\n}\r\n\r\n.iconfont {\r\n  font-family: \"iconfont\" !important;\r\n  font-size: 16px;\r\n  font-style: normal;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n`\r\n","import { createGlobalStyle } from'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\thtml, body, div, span, applet, object, iframe,\r\n\th1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n\ta, abbr, acronym, address, big, cite, code,\r\n\tdel, dfn, em, img, ins, kbd, q, s, samp,\r\n\tsmall, strike, strong, sub, sup, tt, var,\r\n\tb, u, i, center,\r\n\tdl, dt, dd, ol, ul, li,\r\n\tfieldset, form, label, legend,\r\n\ttable, caption, tbody, tfoot, thead, tr, th, td,\r\n\tarticle, aside, canvas, details, embed, \r\n\tfigure, figcaption, footer, header, hgroup, \r\n\tmenu, nav, output, ruby, section, summary,\r\n\ttime, mark, audio, video {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tborder: 0;\r\n\t\tfont-size: 100%;\r\n\t\tfont: inherit;\r\n\t\tvertical-align: baseline;\r\n\t}\r\n\t/* HTML5 display-role reset for older browsers */\r\n\tarticle, aside, details, figcaption, figure, \r\n\tfooter, header, hgroup, menu, nav, section {\r\n\t\tdisplay: block;\r\n\t}\r\n\tbody {\r\n\t\tline-height: 1;\r\n\t}\r\n\thtml, body {\r\n\t\tbackground: #f2f3f4;;\r\n\t}\r\n\tol, ul {\r\n\t\tlist-style: none;\r\n\t}\r\n\tblockquote, q {\r\n\t\tquotes: none;\r\n\t}\r\n\tblockquote:before, blockquote:after,\r\n\tq:before, q:after {\r\n\t\tcontent: '';\r\n\t\tcontent: none;\r\n\t}\r\n\ttable {\r\n\t\tborder-collapse: collapse;\r\n\t\tborder-spacing: 0;\r\n\t}\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: #fff;\r\n\t}\r\n`","import styled from'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nexport const Top = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 5px 10px;\r\n  background: ${style[\"theme-color\"]};\r\n  &>span {\r\n    line-height: 40px;\r\n    color: #f1f1f1;\r\n    font-size: 20px;\r\n    &.iconfont {\r\n      font-size: 25px;\r\n    }\r\n  }\r\n`\r\nexport const Tab = styled.div`\r\n  height: 44px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  background: ${style[\"theme-color\"]};\r\n  a {\r\n    flex: 1;\r\n    padding: 2px 0;\r\n    font-size: 14px;\r\n    color: #e4e4e4;\r\n    &.selected {\r\n      span {\r\n        padding: 3px 0;\r\n        font-weight: 700;\r\n        color: #f1f1f1;\r\n        border-bottom: 2px solid #f1f1f1;\r\n      }\r\n    }\r\n  }\r\n`\r\nexport const TabItem = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n`","import styled, { keyframes } from 'styled-components';\r\nimport style from '../../../assets/global-style';\r\n\r\nconst rotate = keyframes`\r\n  0%{\r\n    transform: rotate(0);\r\n  }\r\n  100%{\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nexport const MiniPlayerContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  width: 100%;\r\n  height: 60px;\r\n  background: ${style[\"highlight-background-color\"]};\r\n  &.mini-enter {\r\n    transform: translate3d(0, 100%, 0);\r\n  }\r\n  &.mini-enter-active {\r\n    transform: translate3d(0, 0, 0);\r\n    transition: all 0.4s;\r\n  }\r\n  &.mini-exit-active {\r\n    transform: translate3d(0, 100%, 0);\r\n    transition: all .4s\r\n  }\r\n  .icon {\r\n    flex: 0 0 40px;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 0 10px 0 20px;\r\n    .imgWrapper {\r\n      width: 100%;\r\n      height: 100%;\r\n      img {\r\n        border-radius: 50%;\r\n        &.play {\r\n          animation: ${rotate} 10s infinite;\r\n          &.pause {\r\n            animation-play-state: paused;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    flex: 1;\r\n    line-height: 20px;\r\n    overflow: hidden;\r\n    .name {\r\n      margin-bottom: 2px;\r\n      font-size: ${style[\"font-size-m\"]};\r\n      color: ${style[\"font-color-desc\"]};\r\n      ${style.noWrap()}\r\n    }\r\n    .desc {\r\n      font-size: ${style[\"font-size-s\"]};\r\n      color: ${style[\"font-color-desc-v2\"]};\r\n      ${style.noWrap()}\r\n    }\r\n  }\r\n  .control {\r\n    flex: 0 0 30px;\r\n    padding: 0 10px;\r\n    .iconfont, .icon-playlist {\r\n      font-size: 30px;\r\n      color: ${style[\"theme-color\"]};\r\n    }\r\n    .icon-mini {\r\n      font-size: 16px;\r\n      position: absolute;\r\n      left: 8px;\r\n      top: 8px;\r\n      &.icon-play {\r\n        left: 9px\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nconst CircleWrapper = styled.div`\r\n  position: relative;\r\n  circle {\r\n    stroke-width: 8px;\r\n    transform-origin: center;\r\n    &.progress-background {\r\n      transform: scale(0.9);\r\n      stroke: ${style[\"theme-color-shadow\"]};\r\n    }\r\n    &.progress-bar {\r\n      transform: scale(0.9) rotate(-90deg);\r\n      stroke: ${style[\"theme-color\"]};\r\n    }\r\n  }\r\n`\r\n\r\nfunction ProgressCircle(props) {\r\n    const { radius, percent } = props;\r\n    // 整个背景的周长\r\n    const dashArray = Math.PI * 100;\r\n    // 没有高亮的部分，剩下高亮的就是进度\r\n    const dashOffset = (1 - percent) * dashArray;\r\n\r\n    return (\r\n        <CircleWrapper>\r\n            <svg width={radius} height={radius} viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <circle className=\"progress-background\" r=\"50\" cx=\"50\" cy=\"50\" fill=\"transparent\" />\r\n                <circle className=\"progress-bar\" r=\"50\" cx=\"50\" cy=\"50\" fill=\"transparent\"\r\n                    strokeDasharray={dashArray}\r\n                    strokeDashoffset={dashOffset} />\r\n            </svg>\r\n            {props.children}\r\n        </CircleWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(ProgressCircle);","import React, { useRef } from 'react';\r\nimport { getName } from '../../../api/utils';\r\nimport { MiniPlayerContainer } from './style';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport ProgressCircle from '../../../baseUI/progress-circle'\r\n\r\nfunction MiniPlayer(props) {\r\n    const { song, fullScreen, playing, percent } = props;\r\n    const { clickPlaying, toggleFullScreen, togglePlayList } = props;\r\n    // 先 mock 一份 percent 数据\r\n    // const percent = 0.2\r\n\r\n    const miniPlayerRef = useRef();\r\n\r\n    const handleTogglePlayList = (e) => {\r\n        togglePlayList (true);\r\n        e.stopPropagation ();\r\n      };\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={!fullScreen}\r\n            timeout={400}\r\n            classNames=\"mini\"\r\n            onEnter={() => {\r\n                miniPlayerRef.current.style.display = \"flex\";\r\n            }}\r\n            onExited={() => {\r\n                miniPlayerRef.current.style.display = \"none\";\r\n            }}\r\n        >\r\n            <MiniPlayerContainer ref={miniPlayerRef} onClick={() => toggleFullScreen(true)}>\r\n                <div className=\"icon\">\r\n                    <div className=\"imgWrapper\">\r\n                        <img className={`play ${playing ? \"\" : \"pause\"}`} src={song.al.picUrl} width=\"40\" height=\"40\" alt=\"img\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <h2 className=\"name\">{song.name}</h2>\r\n                    <p className=\"desc\">{getName(song.ar)}</p>\r\n                </div>\r\n                <div className=\"control\">\r\n                    <ProgressCircle radius={32} percent={percent} >\r\n                        {playing ?\r\n                            <i className=\"icon-mini iconfont icon-pause\" onClick={e => clickPlaying(e, false)}>&#xe650;</i>\r\n                            :\r\n                            <i className=\"icon-mini iconfont icon-play\" onClick={e => clickPlaying(e, true)}>&#xe61e;</i>\r\n                        }\r\n                    </ProgressCircle>\r\n                </div>\r\n                {/* // 给列表图标绑定事件 */}\r\n                <div className=\"control\" onClick={handleTogglePlayList}>\r\n                    <i className=\"iconfont\">&#xe640;</i>\r\n                </div>\r\n            </MiniPlayerContainer>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default React.memo(MiniPlayer);","import styled, { keyframes } from \"styled-components\";\r\nimport style from \"../../../assets/global-style\";\r\n\r\nconst rotate = keyframes`\r\n  0%{\r\n    transform: rotate(0);\r\n  }\r\n  100%{\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\nexport const NormalPlayerContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 150;\r\n  background: ${style[\"background-color\"]};\r\n  .background {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n    opacity: 0.6;\r\n    filter: blur(20px);\r\n    &.layer {\r\n      background: ${style[\"font-color-desc\"]};\r\n      opacity: 0.3;\r\n      filter: none;\r\n    }\r\n  }\r\n  &.mini-enter {\r\n    transform: translate3d(0, 100%, 0);\r\n  }\r\n  &.mini-enter-active {\r\n    transform: translate3d(0, 0, 0);\r\n    transition: all 0.4s;\r\n  }\r\n  &.mini-exit-active {\r\n    transform: translate3d(0, 100%, 0);\r\n    transition: all .4s\r\n  }\r\n  &.normal-enter,\r\n  &.normal-exit-done {\r\n  .top {\r\n    transform: translate3d(0, -100px, 0);\r\n  }\r\n  .bottom {\r\n    transform: translate3d(0, 100px, 0);\r\n  }\r\n}\r\n  &.normal-enter-active,\r\n  &.normal-exit-active {\r\n    .top,\r\n    .bottom {\r\n      transform: translate3d(0, 0, 0);\r\n      transition: all 0.4s cubic-bezier(0.86, 0.18, 0.82, 1.32);\r\n    }\r\n    opacity: 1;\r\n    transition: all 0.4s;\r\n  }\r\n  &.normal-exit-active {\r\n    opacity: 0;\r\n  }\r\n`;\r\nexport const Top = styled.div`\r\n  position: relative;\r\n  margin-bottom: 25px;\r\n  .back {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 6px;\r\n    z-index: 50;\r\n    .iconfont {\r\n      display: block;\r\n      padding: 9px;\r\n      font-size: 24px;\r\n      color: ${style[\"font-color-desc\"]};\r\n      font-weight: bold;\r\n      transform: rotate(90deg);\r\n    }\r\n  }\r\n  .title {\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    line-height: 40px;\r\n    text-align: center;\r\n    font-size: ${style[\"font-size-l\"]};\r\n    color: ${style[\"font-color-desc\"]};\r\n    ${style.noWrap()};\r\n  }\r\n  .subtitle {\r\n    line-height: 20px;\r\n    text-align: center;\r\n    font-size: ${style[\"font-size-m\"]};\r\n    color: ${style[\"font-color-desc-v2\"]};\r\n    ${style.noWrap()};\r\n  }\r\n`;\r\nexport const Middle = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 80px;\r\n  bottom: 170px;\r\n  white-space: nowrap;\r\n  font-size: 0;\r\n  overflow: hidden;\r\n`;\r\nexport const CDWrapper = styled.div`\r\n  position: absolute;\r\n  margin: auto;\r\n  top: 10%;\r\n  left: 0;\r\n  right: 0;\r\n  width: 80%;\r\n  box-sizing: border-box;\r\n  height: 80vw;\r\n  .cd {\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n    .image {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      box-sizing: border-box;\r\n      border-radius: 50%;\r\n      border: 10px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n    .play {\r\n      animation: ${rotate} 20s linear infinite;\r\n      &.pause {\r\n        animation-play-state: paused;\r\n      }\r\n    }\r\n  }\r\n  .playing_lyric {\r\n    margin-top: 20px;\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    white-space: normal;\r\n    text-align: center;\r\n    color: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nexport const Bottom = styled.div`\r\n  position: absolute;\r\n  bottom: 50px;\r\n  width: 100%;\r\n`;\r\nexport const ProgressWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 80%;\r\n  margin: 0px auto;\r\n  padding: 10px 0;\r\n  .time {\r\n    color: ${style[\"font-color-desc\"]};\r\n    font-size: ${style[\"font-size-s\"]};\r\n    flex: 0 0 45px;\r\n    line-height: 30px;\r\n    width: 30px;\r\n    &.time-l {\r\n      text-align: left;\r\n    }\r\n    &.time-r {\r\n      text-align: right;\r\n    }\r\n  }\r\n  .progress-bar-wrapper {\r\n    flex: 1;\r\n  }\r\n`;\r\nexport const Operators = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  .icon {\r\n    font-weight: 300;\r\n    flex: 1;\r\n    color: ${style[\"font-color-desc\"]};\r\n    &.disable {\r\n      color: ${style[\"theme-color-shadow\"]};\r\n    }\r\n    i {\r\n      font-weight: 300;\r\n      font-size: 30px;\r\n    }\r\n  }\r\n  .i-left {\r\n    text-align: right;\r\n  }\r\n  .i-center {\r\n    padding: 0 20px;\r\n    text-align: center;\r\n    i {\r\n      font-size: 40px;\r\n    }\r\n  }\r\n  .i-right {\r\n    text-align: left;\r\n  }\r\n  .icon-favorite {\r\n    color: ${style[\"theme-color\"]};\r\n  }\r\n`;\r\n\r\nexport const LyricContainer = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n`;\r\nexport const LyricWrapper = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  text-align: center;\r\n  p {\r\n    line-height: 32px;\r\n    color: rgba (255, 255, 255, 0.5);\r\n    white-space: normal;\r\n    font-size: ${style [\"font-size-l\"]};\r\n    &.current {\r\n      color: #fff;\r\n    }\r\n    &.pure {\r\n      position: relative;\r\n      top: 30vh;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport style from '../../assets/global-style';\r\nimport { prefixStyle } from './../../api/utils';\r\n\r\nconst ProgressBarWrapper = styled.div`\r\n  height: 30px;\r\n  .bar-inner {\r\n    position: relative;\r\n    top: 13px;\r\n    height: 4px;\r\n    background: rgba(0, 0, 0, .3);\r\n    .progress {\r\n      position: absolute;\r\n      height: 100%;\r\n      background: ${style[\"theme-color\"]};\r\n    }\r\n    .progress-btn-wrapper {\r\n      position: absolute;\r\n      left: -15px;\r\n      top: -13px;\r\n      width: 30px;\r\n      height: 30px;\r\n      .progress-btn {\r\n        position: relative;\r\n        top: 7px;\r\n        left: 7px;\r\n        box-sizing: border-box;\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 3px solid ${style[\"border-color\"]};\r\n        border-radius: 50%;\r\n        background: ${style[\"theme-color\"]};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\nfunction ProgressBar(props) {\r\n\r\n    const { percent } = props;\r\n\r\n    const { percentChange } = props;\r\n\r\n    const progressBar = useRef();\r\n    const progress = useRef();\r\n    const progressBtn = useRef();\r\n    const [touch, setTouch] = useState({});\r\n\r\n    const progressBtnWidth = 16;\r\n    const transform = prefixStyle('transform')\r\n\r\n\r\n    //监听percent\r\nuseEffect(() => {\r\n    if(percent >= 0 && percent <= 1 && !touch.initiated) {\r\n      const barWidth = progressBar.current.clientWidth - progressBtnWidth;\r\n      const offsetWidth = percent * barWidth;\r\n      progress.current.style.width = `${offsetWidth}px`;\r\n      progressBtn.current.style[transform] = `translate3d(${offsetWidth}px, 0, 0)`;\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [percent]);\r\n\r\n\r\n\r\n    // 处理进度条的偏移\r\n    const _offset = (offsetWidth) => {\r\n        progress.current.style.width = `${offsetWidth}px`;\r\n        progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\r\n    }\r\n    //   改变百分比\r\n    const _changePercent = () => {\r\n        const barWidth = progressBar.current.clientWidth - progressBtnWidth;\r\n        const curPercent = progress.current.clientWidth / barWidth;// 新的进度计算\r\n        percentChange(curPercent);// 把新的进度传给回调函数并执行\r\n    }\r\n\r\n    const progressTouchStart = (e) => {\r\n        const startTouch = {};\r\n        startTouch.initiated = true;//initial 为 true 表示滑动动作开始了\r\n        startTouch.startX = e.touches[0].pageX;// 滑动开始时横向坐标\r\n        startTouch.left = progress.current.clientWidth;// 当前 progress 长度\r\n        setTouch(startTouch);\r\n    }\r\n\r\n    const progressTouchMove = (e) => {\r\n        if (!touch.initiated) return;\r\n        // 滑动距离   \r\n        const deltaX = e.touches[0].pageX - touch.startX;\r\n        const barWidth = ((progressBar.current.clientWidth - progressBtnWidth) <= progressBar.current.clientWidth) ?\r\n            progressBar.current.clientWidth - progressBtnWidth :\r\n            progressBar.current.clientWidth;\r\n        const offsetWidth = Math.min(Math.max(0, touch.left + deltaX), barWidth);\r\n        _offset(offsetWidth);\r\n    }\r\n\r\n    const progressTouchEnd = (e) => {\r\n        const endTouch = JSON.parse(JSON.stringify(touch));\r\n        endTouch.initiated = false;\r\n        setTouch(endTouch);\r\n        _changePercent();\r\n    }\r\n\r\n    const progressClick = (e) => {\r\n        const rect = progressBar.current.getBoundingClientRect();\r\n        const offsetWidth = e.pageX - rect.left;\r\n        _offset(offsetWidth);\r\n        _changePercent();\r\n    };\r\n    return (\r\n        <ProgressBarWrapper>\r\n            <div className=\"bar-inner\" ref={progressBar} onClick={progressClick}>\r\n                <div className=\"progress\" ref={progress}></div>\r\n                <div className=\"progress-btn-wrapper\" ref={progressBtn}\r\n                    onTouchStart={progressTouchStart}\r\n                    onTouchMove={progressTouchMove}\r\n                    onTouchEnd={progressTouchEnd}\r\n                >\r\n                    <div className=\"progress-btn\"></div>\r\n                </div>\r\n            </div>\r\n        </ProgressBarWrapper>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useRef, useEffect } from \"react\";\r\nimport { getName } from \"../../../api/utils\";\r\nimport {\r\n    NormalPlayerContainer,\r\n    Top,\r\n    Middle,\r\n    Bottom,\r\n    Operators,\r\n    CDWrapper,\r\n    ProgressWrapper\r\n} from \"./style\";\r\nimport animations from \"create-keyframe-animation\";\r\nimport { prefixStyle, formatPlayTime } from \"../../../api/utils\";\r\nimport { playMode } from '../../../api/config';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ProgressBar from '../../../baseUI/progressBar/index';\r\nimport Scroll from \"../../../baseUI/scroll\";\r\nimport { LyricContainer, LyricWrapper } from \"./style\";\r\n\r\n\r\nfunction NormalPlayer(props) {\r\n    const { song, fullScreen, playing, percent, duration, currentTime, mode, currentLineNum, currentPlayingLyric, currentLyric } = props;\r\n    const { toggleFullScreen, clickPlaying, onProgressChange, handlePrev, handleNext, changeMode, togglePlayList } = props;\r\n\r\n\r\n    const normalPlayerRef = useRef();\r\n    const cdWrapperRef = useRef();\r\n    const transform = prefixStyle(\"transform\");\r\n\r\n    const currentState = useRef(\"\");\r\n    const lyricScrollRef = useRef();\r\n    const lyricLineRefs = useRef([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!lyricScrollRef.current) return;\r\n        let bScroll = lyricScrollRef.current.getBScroll();\r\n        if (currentLineNum > 5) {\r\n            // 保持当前歌词在第 5 条的位置\r\n            let lineEl = lyricLineRefs.current[currentLineNum - 5].current;\r\n            bScroll.scrollToElement(lineEl, 1000);\r\n        } else {\r\n            // 当前歌词行数 <=5, 直接滚动到最顶端\r\n            bScroll.scrollTo(0, 0, 1000);\r\n        }\r\n    }, [currentLineNum]);\r\n\r\n    // 计算偏移的辅助函数\r\n    const _getPosAndScale = () => {\r\n        const targetWidth = 40;\r\n        const paddingLeft = 40;\r\n        const paddingBottom = 30;\r\n        const paddingTop = 80;\r\n        const width = window.innerWidth * 0.8;\r\n        const scale = targetWidth / width;\r\n        // 两个圆心的横坐标距离和纵坐标距离\r\n        const x = -(window.innerWidth / 2 - paddingLeft);\r\n        const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\r\n        // console.log(x,y,scale)\r\n        return {\r\n            x,\r\n            y,\r\n            scale\r\n        };\r\n    };\r\n\r\n    const enter = () => {\r\n        normalPlayerRef.current.style.display = \"block\";\r\n        const { x, y, scale } = _getPosAndScale();// 获取 miniPlayer 图片中心相对 normalPlayer 唱片中心的偏移\r\n        let animation = {\r\n            0: {\r\n                transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\r\n            },\r\n            60: {\r\n                transform: `translate3d(0, 0, 0) scale(1.1)`\r\n            },\r\n            100: {\r\n                transform: `translate3d(0, 0, 0) scale(1)`\r\n            }\r\n        };\r\n        animations.registerAnimation({\r\n            name: \"move\",\r\n            animation,\r\n            presets: {\r\n                duration: 400,\r\n                easing: \"linear\"\r\n            }\r\n        });\r\n        animations.runAnimation(cdWrapperRef.current, \"move\");\r\n    };\r\n    const leave = () => {\r\n        if (!cdWrapperRef.current) return;\r\n        const cdWrapperDom = cdWrapperRef.current;\r\n        cdWrapperDom.style.transition = \"all 0.4s\";\r\n        const { x, y, scale } = _getPosAndScale();\r\n        cdWrapperDom.style[transform] = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\r\n    };\r\n\r\n    const afterLeave = () => {\r\n        if (!cdWrapperRef.current) return;\r\n        const cdWrapperDom = cdWrapperRef.current;\r\n        cdWrapperDom.style.transition = \"\";\r\n        cdWrapperDom.style[transform] = \"\";\r\n        // 一定要注意现在要把 normalPlayer 这个 DOM 给隐藏掉，因为 CSSTransition 的工作只是把动画执行一遍 \r\n        // 不置为 none 现在全屏播放器页面还是存在\r\n        normalPlayerRef.current.style.display = \"none\";\r\n        currentState.current = \"\";\r\n    };\r\n\r\n\r\n\r\n    const afterEnter = () => {\r\n        // 进入后解绑帧动画\r\n        const cdWrapperDom = cdWrapperRef.current;\r\n        animations.unregisterAnimation(\"move\");\r\n        cdWrapperDom.style.animation = \"\";\r\n    };\r\n\r\n    const goBack = () => {\r\n        toggleFullScreen(false)\r\n    }\r\n\r\n    const toggleCurrentState = () => {\r\n        if (currentState.current !== \"lyric\") {\r\n            currentState.current = \"lyric\";\r\n        } else {\r\n            currentState.current = \"\";\r\n        }\r\n    };\r\n\r\n\r\n    //getPlayMode方法\r\n    const getPlayMode = () => {\r\n        let content;\r\n        if (mode === playMode.sequence) {\r\n            content = \"&#xe625;\";\r\n        } else if (mode === playMode.loop) {\r\n            content = \"&#xe653;\";\r\n        } else {\r\n            content = \"&#xe61b;\";\r\n        }\r\n        return content;\r\n    };\r\n\r\n\r\n    return (\r\n        <CSSTransition\r\n            classNames=\"normal\"\r\n            in={fullScreen}\r\n            timeout={400}\r\n            mountOnEnter\r\n            onEnter={enter}\r\n            onEntered={afterEnter}\r\n            onExit={leave}\r\n            onExited={afterLeave}\r\n        >\r\n            <NormalPlayerContainer ref={normalPlayerRef}>\r\n                <div className=\"background\">\r\n                    <img\r\n                        src={song.al.picUrl + \"?param=300x300\"}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        alt=\"歌曲图片\"\r\n                    />\r\n                </div>\r\n                <div className=\"background layer\"></div>\r\n                <Top className=\"top\">\r\n                    <div className=\"back\" onClick={goBack}>\r\n                        <i className=\"iconfont icon-back\">&#xe662;</i>\r\n                    </div>\r\n                    <h1 className=\"title\">{song.name}</h1>\r\n                    <h1 className=\"subtitle\">{getName(song.ar)}</h1>\r\n                </Top>\r\n                <Middle ref={cdWrapperRef} onClick={toggleCurrentState}>\r\n                    <CSSTransition\r\n                        timeout={400}\r\n                        classNames=\"fade\"\r\n                        in={currentState.current !== \"lyric\"}\r\n                    >\r\n                        <CDWrapper style={{ visibility: currentState.current !== \"lyric\" ? \"visible\" : \"hidden\" }}>\r\n                            <div className=\"cd\">\r\n                                <img\r\n                                    className={`image play ${playing ? \"\" : \"pause\"}`}\r\n                                    src={song.al.picUrl + \"?param=400x400\"}\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <p className=\"playing_lyric\">{currentPlayingLyric}</p>\r\n                        </CDWrapper>\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        timeout={400}\r\n                        classNames=\"fade\"\r\n                        in={currentState.current === \"lyric\"}\r\n                    >\r\n                        <LyricContainer>\r\n                            <Scroll ref={lyricScrollRef}>\r\n                                <LyricWrapper\r\n                                    style={{ visibility: currentState.current === \"lyric\" ? \"visible\" : \"hidden\" }}\r\n                                    className=\"lyric_wrapper\"\r\n                                >\r\n                                    {\r\n                                        currentLyric\r\n                                            ? currentLyric.lines.map((item, index) => {\r\n                                                // 拿到每一行歌词的 DOM 对象，后面滚动歌词需要！ \r\n                                                lyricLineRefs.current[index] = React.createRef();\r\n                                                return (\r\n                                                    <p\r\n                                                        className={`text ${currentLineNum === index ? \"current\" : \"\"\r\n                                                            }`}\r\n                                                        key={item + index}\r\n                                                        ref={lyricLineRefs.current[index]}\r\n                                                    >\r\n                                                        {item.txt}\r\n                                                    </p>\r\n                                                );\r\n                                            })\r\n                                            : <p className=\"text pure\"> 纯音乐，请欣赏。</p>}\r\n                                </LyricWrapper>\r\n                            </Scroll>\r\n                        </LyricContainer>\r\n                    </CSSTransition>\r\n                </Middle>\r\n\r\n                <Bottom className=\"bottom\">\r\n                    <ProgressWrapper>\r\n                        <span className=\"time time-l\">{formatPlayTime(currentTime)}</span>\r\n                        <div className=\"progress-bar-wrapper\">\r\n                            <ProgressBar\r\n                                percent={percent}\r\n                                percentChange={onProgressChange}\r\n                            ></ProgressBar>\r\n                        </div>\r\n                        <div className=\"time time-r\">{formatPlayTime(duration)}</div>\r\n                    </ProgressWrapper>\r\n                    <Operators>\r\n                        {/* //Operator标签下 */}\r\n                        <div className=\"icon i-left\" onClick={changeMode}>\r\n                            <i\r\n                                className=\"iconfont\"\r\n                                dangerouslySetInnerHTML={{ __html: getPlayMode() }}\r\n                            ></i>\r\n                        </div>\r\n                        <div className=\"icon i-left\" onClick={handlePrev}>\r\n                            <i className=\"iconfont\">&#xe6e1;</i>\r\n                        </div>\r\n                        <div className=\"icon i-center\">\r\n                            <i\r\n                                className=\"iconfont\"\r\n                                onClick={e => clickPlaying(e, !playing)}\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: playing ? \"&#xe723;\" : \"&#xe731;\"\r\n                                }}\r\n                            ></i>\r\n                        </div>\r\n                        <div className=\"icon i-right\" onClick={handleNext}>\r\n                            <i className=\"iconfont\">&#xe718;</i>\r\n                        </div>\r\n                        <div className=\"icon i-right\" onClick={() => togglePlayList(true)}>\r\n                            <i className=\"iconfont\">&#xe640;</i>\r\n                        </div>\r\n                    </Operators>\r\n                </Bottom>\r\n            </NormalPlayerContainer>\r\n        </CSSTransition>\r\n    );\r\n}\r\nexport default React.memo(NormalPlayer);","import React, {useState, useImperativeHandle, forwardRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport style from '../../assets/global-style';\r\n\r\nconst ToastWrapper = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  width: 100%;\r\n  height: 50px;\r\n  /* background: ${style[\"highlight-background-color\"]}; */\r\n  &.drop-enter{\r\n    opacity: 0;\r\n    transform: translate3d(0, 100%, 0);\r\n  }\r\n  &.drop-enter-active{\r\n    opacity: 1;\r\n    transition: all 0.3s;\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n  &.drop-exit-active{\r\n    opacity: 0;\r\n    transition: all 0.3s;\r\n    transform: translate3d(0, 100%, 0);\r\n  }\r\n  .text{\r\n    line-height: 50px;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-size: ${style[\"font-size-l\"]};\r\n  }\r\n`\r\n//外面组件需要拿到这个函数组件的ref，因此用forwardRef\r\nconst Toast = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n  const [timer, setTimer] = useState('');\r\n  const {text} = props;\r\n  //外面组件拿函数组件ref的方法，用useImperativeHandle这个hook\r\n  useImperativeHandle(ref, () => ({\r\n    show() {\r\n      // 做了防抖处理\r\n      if(timer) clearTimeout(timer);\r\n      setShow(true);\r\n      setTimer(setTimeout(() => {\r\n        setShow(false)\r\n      }, 3000));\r\n    }\r\n  }))\r\n  return (\r\n    <CSSTransition in={show} timeout={300} classNames=\"drop\" unmountOnExit>\r\n      <ToastWrapper>\r\n        <div className=\"text\">{text}</div>\r\n      </ToastWrapper>\r\n    </CSSTransition>\r\n  )\r\n});\r\n\r\nexport default React.memo(Toast);","import styled from 'styled-components';\r\nimport style from '../../../assets/global-style';\r\n\r\nexport const PlayListWrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  background-color: ${style[\"background-color-shadow\"]};\r\n  .list_wrapper {\r\n    position: absolute;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    opacity: 1;\r\n    border-radius: 10px 10px 0 0;\r\n    background-color: ${style[\"highlight-background-color\"]};\r\n    transform: translate3d(0, 0, 0);\r\n    .list_close {\r\n      text-align: center;\r\n      line-height: 50px;\r\n      background: ${style[\"background-color\"]};\r\n      font-size: ${style[\"font-size-l\"]};\r\n      color: ${style[\"font-color-desc\"]};\r\n    }\r\n  }\r\n  &.list-fade-enter {\r\n    opacity: 0;\r\n  }\r\n  &.list-fade-enter-active {\r\n    opacity: 1;\r\n    transition: all 0.3s;\r\n  }\r\n  &.list-fade-exit {\r\n    opacity: 1;\r\n  }\r\n  &.list-fade-exit-active {\r\n    opacity: 0;\r\n    transition: all 0.3s;\r\n  }\r\n`;\r\nexport const ScrollWrapper = styled.div`\r\n  height: 400px;\r\n  overflow: hidden;\r\n`;\r\n\r\n\r\nexport const ListHeader = styled.div`\r\n  position: relative;\r\n  padding: 20px 30px 10px 20px;\r\n  .title {\r\n    display: flex;\r\n    align-items: center;\r\n    >div {\r\n      flex:1;\r\n      .text {\r\n        flex: 1;\r\n        font-size: ${style[\"font-size-m\"]};\r\n        color: ${style[\"font-color-desc\"]};\r\n      }\r\n    }\r\n    .iconfont {\r\n      margin-right: 10px;\r\n      font-size: ${style[\"font-size-ll\"]};\r\n      color: ${style[\"theme-color\"]};\r\n    }\r\n    .clear {\r\n      ${style.extendClick()}\r\n      font-size: ${style[\"font-size-l\"]};\r\n    }\r\n  }\r\n`\r\n\r\nexport const ListContent = styled.div`\r\n  .item {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n    padding: 0 30px 0 20px;\r\n    overflow: hidden;\r\n    .current {\r\n      flex: 0 0 20px;\r\n      width: 20px;\r\n      font-size: ${style[\"font-size-s\"]};\r\n      color: ${style[\"theme-color\"]};\r\n    }\r\n    .text {\r\n      flex: 1;\r\n      ${style.noWrap()}\r\n      font-size: ${style[\"font-size-m\"]};\r\n      color: ${style[\"font-color-desc-v2\"]};\r\n      .icon-favorite {\r\n        color: ${style[\"theme-color\"]};\r\n      }\r\n    }\r\n    .like {\r\n      ${style.extendClick()}\r\n      margin-right: 15px;\r\n      font-size: ${style[\"font-size-m\"]};\r\n      color: ${style[\"theme-color\"]};\r\n    }\r\n    .delete {\r\n      ${style.extendClick()}\r\n      font-size: ${style[\"font-size-s\"]};\r\n      color: ${style[\"theme-color\"]};\r\n    }\r\n  }\r\n`","import React, {forwardRef, useImperativeHandle, useState} from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled, {keyframes} from 'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\n\r\nconst confirmFadeIn = keyframes`\r\n  0%{\r\n    opacity: 0;\r\n  }\r\n  100%{\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst confirmZoom = keyframes`\r\n  0%{\r\n    transform: scale(0);\r\n  }\r\n  50%{\r\n    transform: scale(1.1);\r\n  }\r\n  100%{\r\n    transform: scale(1);\r\n  }\r\n`\r\n\r\nconst ConfirmWrapper = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  background: ${style[\"background-color-shadow\"]};\r\n  &.confirm-fade-enter-active{\r\n    animation: ${confirmFadeIn} 0.3s;\r\n    .confirm_content{\r\n      animation: ${confirmZoom} 0.3s\r\n    }\r\n  }\r\n  >div{\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate3d(-50%, -50%, 0);\r\n    z-index: 100;\r\n    .confirm_content{\r\n      width: 270px;\r\n      border-radius: 13px;\r\n      background: ${style[\"highlight-background-color\"]};\r\n      .text{\r\n        padding: 19px 15px;\r\n        line-height: 22px;\r\n        text-align: center;\r\n        font-size: ${style[\"font-size-l\"]};\r\n        color: ${style[\"font-color-desc-v2\"]};\r\n      }\r\n      .operate{\r\n        display: flex;\r\n        align-items: center;\r\n        text-align: center;\r\n        font-size: ${style[\"font-size-l\"]};\r\n        .operate_btn{\r\n          flex: 1;\r\n          line-height: 22px;\r\n          padding: 10px 0;\r\n          border-top: 1px solid ${style[\"border-color\"]};\r\n          color: ${style[\"font-color-desc\"]};\r\n          &.left{\r\n            border-right: 1px solid ${style[\"border-color\"]};\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Confirm = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n  const { text, cancelBtnText, confirmBtnText } = props;\r\n\r\n  const {handleConfirm} = props;\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    show() {\r\n      setShow(true);\r\n    }\r\n  }));\r\n  // style={{display: show ? \"block\": \"none\"}}\r\n  return (\r\n    <CSSTransition classNames=\"confirm-fade\" timeout={300} appear={true} in={show}>\r\n      <ConfirmWrapper style={{display: show ? \"block\": \"none\"}} onClick={e => e.stopPropagation()}>\r\n        <div>\r\n          <div className=\"confirm_content\">\r\n            <p className=\"text\">{text}</p>\r\n            <div className=\"operate\" >\r\n              <div className=\"operate_btn left\" onClick={() => setShow(false)}>{cancelBtnText}</div>\r\n              <div className=\"operate_btn\" onClick={() => { setShow(false); handleConfirm();}}>{confirmBtnText}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ConfirmWrapper>\r\n    </CSSTransition>\r\n  )\r\n})\r\n\r\nexport default React.memo(Confirm);","import { connect } from \"react-redux\";\r\nimport { PlayListWrapper, ScrollWrapper, ListHeader, ListContent } from './style';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport React, { useRef, useState, useCallback } from 'react';\r\n// 从 utils.js 中再引入 shuffle 和 findIndex\r\nimport { prefixStyle, getName, shuffle, findIndex } from './../../../api/utils';\r\nimport { changeShowPlayList, changeCurrentIndex, changePlayMode, changePlayList, deleteSong, changeSequecePlayList, changeCurrentSong, changePlayingState } from \"../store/actionCreators\";\r\nimport { playMode } from \"../../../api/config\";\r\nimport Scroll from '../../../baseUI/scroll';\r\nimport Confirm from '../../../baseUI/confirm';\r\n\r\nfunction PlayList(props) {\r\n    const {\r\n        currentIndex,\r\n        currentSong: immutableCurrentSong,\r\n        showPlayList,\r\n        playList: immutablePlayList,\r\n        mode,\r\n        sequencePlayList: immutableSequencePlayList\r\n    } = props;\r\n    const {\r\n        togglePlayListDispatch,\r\n        changeCurrentIndexDispatch,\r\n        changePlayListDispatch,\r\n        changeModeDispatch,\r\n        deleteSongDispatch,\r\n        clearDispatch\r\n    } = props;\r\n\r\n    const currentSong = immutableCurrentSong.toJS();\r\n    const playList = immutablePlayList.toJS();\r\n    const sequencePlayList = immutableSequencePlayList.toJS();\r\n\r\n    const transform = prefixStyle(\"transform\");\r\n\r\n    // 是否允许滑动事件生效\r\n    const [canTouch, setCanTouch] = useState(true);\r\n    const confirmRef = useRef();\r\n    const playListRef = useRef();\r\n    const listWrapperRef = useRef();\r\n    const listContentRef = useRef();\r\n    const [isShow,setIsShow] = useState(false);\r\n    //touchStart 后记录 y 值\r\n    const [startY, setStartY] = useState(0);\r\n    //touchStart 事件是否已经被触发\r\n    const [initialed, setInitialed] = useState(0);\r\n    // 用户下滑的距离\r\n    const [distance, setDistance] = useState(0);\r\n\r\n\r\n    const onEnterCB = useCallback(() => {\r\n        // 让列表显示\r\n        setIsShow(true);\r\n        // 最开始是隐藏在下面\r\n        listWrapperRef.current.style[transform] = `translate3d(0, 100%, 0)`;\r\n    }, [transform]);\r\n\r\n    const onEnteringCB = useCallback(() => {\r\n        // 让列表展现\r\n        listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\r\n        listWrapperRef.current.style[transform] = `translate3d(0, 0, 0)`;\r\n    }, [transform]);\r\n\r\n    const onExitingCB = useCallback(() => {\r\n        listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\r\n        listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\r\n    }, [transform]);\r\n\r\n    const onExitedCB = useCallback(() => {\r\n        setIsShow(false);\r\n        listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\r\n    }, [transform]);\r\n\r\n    const getCurrentIcon = (item) => {\r\n        // 是不是当前正在播放的歌曲\r\n        const current = currentSong.id === item.id;\r\n        const className = current ? 'icon-play' : '';\r\n        const content = current ? '&#xe6e3;' : '';\r\n        return (\r\n            <i className={`current iconfont ${className}`} dangerouslySetInnerHTML={{ __html: content }}></i>\r\n        )\r\n    };\r\n    const getPlayMode = () => {\r\n        let content, text;\r\n        if (mode === playMode.sequence) {\r\n            content = \"&#xe625;\";\r\n            text = \"顺序播放\";\r\n        } else if (mode === playMode.loop) {\r\n            content = \"&#xe653;\";\r\n            text = \"单曲循环\";\r\n        } else {\r\n            content = \"&#xe61b;\";\r\n            text = \"随机播放\";\r\n        }\r\n        return (\r\n            <div>\r\n                <i className=\"iconfont\" onClick={(e) => changeMode(e)} dangerouslySetInnerHTML={{ __html: content }}></i>\r\n                <span className=\"text\" onClick={(e) => changeMode(e)}>{text}</span>\r\n            </div>\r\n        )\r\n    };\r\n    const changeMode = () => {\r\n        let newMode = (mode + 1) % 3;\r\n        if (newMode === 0) {\r\n            // 顺序模式\r\n            changePlayListDispatch(sequencePlayList);\r\n            let index = findIndex(currentSong, sequencePlayList);\r\n            changeCurrentIndexDispatch(index);\r\n        } else if (newMode === 1) {\r\n            // 单曲循环\r\n            changePlayListDispatch(sequencePlayList);\r\n        } else if (newMode === 2) {\r\n            // 随机播放\r\n            let newList = shuffle(sequencePlayList);\r\n            let index = findIndex(currentSong, newList);\r\n            changePlayListDispatch(newList);\r\n            changeCurrentIndexDispatch(index);\r\n        }\r\n        changeModeDispatch(newMode);\r\n    };\r\n\r\n    const handleChangeCurrentIndex = (index) => {\r\n        if (currentIndex === index) return;\r\n        changeCurrentIndexDispatch(index);\r\n    }\r\n\r\n    const handleDeleteSong = (e, song) => {\r\n        e.stopPropagation();\r\n        deleteSongDispatch(song);\r\n    };\r\n\r\n    const handleShowClear = () => {\r\n        confirmRef.current.show();\r\n    }\r\n\r\n    const handleConfirmClear = () => {\r\n        clearDispatch();\r\n    }\r\n    const handleScroll = (pos) => {\r\n        // 只有当内容偏移量为 0 的时候才能下滑关闭 PlayList。否则一边内容在移动，一边列表在移动，出现 bug\r\n        let state = pos.y === 0;\r\n        setCanTouch(state);\r\n    }\r\n\r\n    const handleTouchStart = (e) => {\r\n        if (!canTouch || initialed) return;\r\n        listWrapperRef.current.style [\"transition\"] = \"\";\r\n        setStartY (e.nativeEvent.touches [0].pageY);// 记录 y 值\r\n        setInitialed (true);\r\n      };\r\n      const handleTouchMove = (e) => {\r\n        if (!canTouch || !initialed) return;\r\n        let distance = e.nativeEvent.touches [0].pageY - startY;\r\n        if (distance < 0) return;\r\n        setDistance (distance);// 记录下滑距离\r\n        listWrapperRef.current.style.transform = `translate3d(0, ${distance}px, 0)`;\r\n      };\r\n      const handleTouchEnd = (e) => {\r\n        setInitialed (false);\r\n        // 这里设置阈值为 150px\r\n        if (distance >= 150) {\r\n          // 大于 150px 则关闭 PlayList\r\n          console.log('scrollfalse')\r\n          setDistance(0)//下滑距离重置为空，否则一旦一次拉到下面之后再次点击都会触发关闭当前弹窗\r\n          togglePlayListDispatch (false);\r\n        } else {\r\n          // 否则反弹回去\r\n          listWrapperRef.current.style [\"transition\"] = \"all 0.3s\";\r\n          listWrapperRef.current.style [transform] = `translate3d(0px, 0px, 0px)`;\r\n        }\r\n      };\r\n\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={showPlayList}\r\n            timeout={300}\r\n            classNames=\"list-fade\"\r\n            onEnter={onEnterCB}\r\n            onEntering={onEnteringCB}\r\n            onExiting={onExitingCB}\r\n            onExited={onExitedCB}\r\n        >\r\n            <PlayListWrapper\r\n                ref={playListRef}\r\n                style={isShow === true ? { display: \"block\" } : { display: \"none\" }}\r\n                onClick={() => togglePlayListDispatch(false)}\r\n            >\r\n                <div className=\"list_wrapper\"\r\n                    ref={listWrapperRef}\r\n                    onClick={e => e.stopPropagation()}\r\n                    onTouchStart={handleTouchStart}\r\n                    onTouchMove={handleTouchMove}\r\n                    onTouchEnd={handleTouchEnd}\r\n                >\r\n                    <ListHeader>\r\n                        <h1 className=\"title\">\r\n                            {getPlayMode()}\r\n                            <span className=\"iconfont clear\" onClick={handleShowClear}>&#xe63d;</span>\r\n                        </h1>\r\n                    </ListHeader>\r\n                    <ScrollWrapper>\r\n                        <Scroll\r\n                            ref={listContentRef}\r\n                            onScroll={pos => handleScroll(pos)}\r\n                            bounceTop={false}\r\n                        >\r\n                            <ListContent>\r\n                                {\r\n                                    playList.map((item, index) => {\r\n                                        return (\r\n                                            <li className=\"item\" key={item.id} onClick={() => handleChangeCurrentIndex(index)}>\r\n                                                {getCurrentIcon(item)}\r\n                                                <span className=\"text\">{item.name} - {getName(item.ar)}</span>\r\n                                                <span className=\"like\">\r\n                                                    <i className=\"iconfont\">&#xe601;</i>\r\n                                                </span>\r\n                                                <span className=\"delete\" onClick={(e) => handleDeleteSong(e, item)}>\r\n                                                    <i className=\"iconfont\">&#xe63d;</i>\r\n                                                </span>\r\n                                            </li>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </ListContent>\r\n                        </Scroll>\r\n                    </ScrollWrapper>\r\n                </div>\r\n                <Confirm\r\n                    ref={confirmRef}\r\n                    text={\"是否删除全部？\"}\r\n                    cancelBtnText={\"取消\"}\r\n                    confirmBtnText={\"确定\"}\r\n                    handleConfirm={handleConfirmClear}\r\n                />\r\n            </PlayListWrapper>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state) => ({\r\n    currentIndex: state.getIn(['player', 'currentIndex']),\r\n    currentSong: state.getIn(['player', 'currentSong']),\r\n    playList: state.getIn(['player', 'playList']),// 播放列表\r\n    sequencePlayList: state.getIn(['player', 'sequencePlayList']),// 顺序排列时的播放列表\r\n    showPlayList: state.getIn(['player', 'showPlayList']),\r\n    mode: state.getIn(['player', 'mode'])\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        togglePlayListDispatch(data) {\r\n            console.log('toggle')\r\n            dispatch(changeShowPlayList(data));\r\n        },\r\n        // 修改当前歌曲在列表中的 index，也就是切歌\r\n        changeCurrentIndexDispatch(data) {\r\n            dispatch(changeCurrentIndex(data));\r\n        },\r\n        // 修改当前的播放模式\r\n        changeModeDispatch(data) {\r\n            dispatch(changePlayMode(data));\r\n        },\r\n        // 修改当前的歌曲列表\r\n        changePlayListDispatch(data) {\r\n            dispatch(changePlayList(data));\r\n        },\r\n        deleteSongDispatch(data) {\r\n            dispatch(deleteSong(data));\r\n        },\r\n        clearDispatch() {\r\n            // 1. 清空两个列表\r\n            dispatch(changePlayList([]));\r\n            dispatch(changeSequecePlayList([]));\r\n            // 2. 初始 currentIndex\r\n            dispatch(changeCurrentIndex(-1));\r\n            // 3. 关闭 PlayList 的显示\r\n            dispatch(changeShowPlayList(false));\r\n            // 4. 将当前歌曲置空\r\n            dispatch(changeCurrentSong({}));\r\n            // 5. 重置播放状态\r\n            dispatch(changePlayingState(false));\r\n\r\n        }\r\n    }\r\n};\r\n\r\n// 将 ui 组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(PlayList));","// 解析 [00:01.997] 这一类时间戳的正则表达式\r\nconst timeExp = /\\[(\\d{2,}):(\\d{2})(?:\\.(\\d{2,3}))?]/g\r\n\r\nconst STATE_PAUSE = 0\r\nconst STATE_PLAYING = 1\r\n\r\n\r\nexport default class Lyric {\r\n    /**\r\n     * @params {string} lrc\r\n     * @params {function} handler\r\n    */\r\n    constructor(lrc, hanlder = () => { }) {\r\n        this.lrc = lrc;\r\n        this.lines = [];// 这是解析后的数组，每一项包含对应的歌词和时间\r\n        this.handler = hanlder;// 回调函数\r\n        this.state = STATE_PAUSE;// 播放状态\r\n        this.curLineIndex = 0;// 当前播放歌词所在的行数\r\n        this.startStamp = 0;// 歌曲开始的时间戳\r\n\r\n        this._initLines();\r\n    }\r\n\r\n    _initLines() {\r\n        // 解析代码\r\n        const lines = this.lrc.split('\\n');\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const line = lines[i];// 如 \"[00:01.997] 作词：薛之谦\"\r\n            let result = timeExp.exec(line);\r\n            if (!result) continue;\r\n            const txt = line.replace(timeExp, '').trim();// 现在把时间戳去掉，只剩下歌词文本\r\n            if (txt) {\r\n                if (result[3].length === 3) {\r\n                    result[3] = result[3] / 10;//[00:01.997] 中匹配到的 997 就会被切成 99\r\n                }\r\n                this.lines.push({\r\n                    time: result[1] * 60 * 1000 + result[2] * 1000 + (result[3] || 0) * 10,// 转化具体到毫秒的时间，result [3] * 10 可理解为 (result / 100) * 1000\r\n                    txt\r\n                });\r\n            }\r\n        }\r\n        this.lines.sort((a, b) => {\r\n            return a.time - b.time;\r\n        });// 根据时间排序\r\n    }\r\n\r\n    //offset 为时间进度，isSeek 标志位表示用户是否手动调整进度\r\n    play(offset = 0, isSeek = false) {\r\n        if (!this.lines.length) {\r\n            return;\r\n        }\r\n        this.state = STATE_PLAYING;\r\n        // 找到当前所在的行\r\n        this.curLineIndex = this._findcurLineIndex(offset);\r\n        // 现在正处于第 this.curLineIndex-1 行\r\n        // 立即定位，方式是调用传来的回调函数，并把当前歌词信息传给它\r\n        this._callHandler(this.curLineIndex - 1);\r\n        // 根据时间进度判断歌曲开始的时间戳\r\n        this.startStamp = +new Date() - offset;\r\n\r\n        if (this.curLineIndex < this.lines.length) {\r\n            clearTimeout(this.timer);\r\n            // 继续播放\r\n            this._playRest(isSeek);\r\n        }\r\n    }\r\n\r\n    _findcurLineIndex(time) {\r\n        for (let i = 0; i < this.lines.length; i++) {\r\n            if (time <= this.lines[i].time) {\r\n                return i\r\n            }\r\n        }\r\n        return this.lines.length - 1\r\n    }\r\n\r\n    _callHandler(i) {\r\n        if (i < 0) {\r\n            return\r\n        }\r\n        this.handler({\r\n            txt: this.lines[i].txt,\r\n            lineNum: i\r\n        })\r\n    }\r\n    //isSeek 标志位表示用户是否手动调整进度\r\n    _playRest(isSeek = false) {\r\n        let line = this.lines[this.curLineIndex];\r\n        let delay;\r\n        if (isSeek) {\r\n            delay = line.time - (+new Date() - this.startStamp);\r\n        } else {\r\n            // 拿到上一行的歌词开始时间，算间隔\r\n            let preTime = this.lines[this.curLineIndex - 1] ? this.lines[this.curLineIndex - 1].time : 0;\r\n            delay = line.time - preTime;\r\n        }\r\n        this.timer = setTimeout(() => {\r\n            this._callHandler(this.curLineIndex++);\r\n            if (this.curLineIndex < this.lines.length && this.state === STATE_PLAYING) {\r\n                this._playRest();\r\n            }\r\n        }, delay)\r\n    }\r\n    stop() {\r\n        this.state = STATE_PAUSE\r\n        clearTimeout(this.timer)\r\n      }\r\n    seek(offset) {\r\n        this.play(offset, true)\r\n    }\r\n}","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    changePlayingState,\r\n    changeShowPlayList,\r\n    changeCurrentIndex,\r\n    changeCurrentSong,\r\n    changePlayList,\r\n    changePlayMode,\r\n    changeFullScreen\r\n} from \"./store/actionCreators\";\r\nimport MiniPlayer from './miniPlayer';\r\nimport NormalPlayer from './normalPlayer';\r\nimport { getSongUrl, isEmptyObject, shuffle, findIndex } from \"../../api/utils\";\r\nimport { playMode } from '../../api/config';\r\nimport Toast from \"./../../baseUI/Toast\";\r\nimport PlayList from \"./play-list\"\r\nimport { getLyricRequest } from '../../api/request'\r\nimport Lyric from './../../api/lyric-parser';\r\n\r\nfunction Player(props) {\r\n    const {\r\n        fullScreen,\r\n        playing,\r\n        currentIndex,\r\n        playList: immutablePlayList,\r\n        currentSong: immutableCurrentSong,\r\n        mode,//播放模式\r\n        sequencePlayList: immutableSequencePlayList,//顺序列表 \r\n    } = props;\r\n    const {\r\n        togglePlayingDispatch,\r\n        changeCurrentIndexDispatch,\r\n        changeCurrentDispatch,\r\n        changePlayListDispatch,//改变playList\r\n        changeModeDispatch,//改变mode\r\n        toggleFullScreenDispatch,\r\n        togglePlayListDispatch\r\n    } = props;\r\n\r\n    const playList = immutablePlayList.toJS();\r\n    const sequencePlayList = immutableSequencePlayList.toJS();\r\n    const currentSong = immutableCurrentSong.toJS();\r\n\r\n    // 即时歌词\r\n    const [currentPlayingLyric, setPlayingLyric] = useState(\"\");\r\n    const currentLyric = useRef();\r\n    // 记录当前行数的 currentLineNum:\r\n    const currentLineNum = useRef(0);\r\n\r\n    // 保存当前audio是否可以切歌\r\n    const songReady = useRef(true);\r\n    const [modeText, setModeText] = useState(\"\");\r\n    // 绑定切换播放和模式时文字显示的组件\r\n    const toastRef = useRef();\r\n    //记录当前的歌曲，以便于下次重渲染时比对是否是一首歌\r\n    const [preSong, setPreSong] = useState({});\r\n    //绑定ref\r\n    const audioRef = useRef();\r\n    //目前播放时间\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    //歌曲总时长\r\n    const [duration, setDuration] = useState(0);\r\n    //歌曲播放进度\r\n    let percent = isNaN(currentTime / duration) ? 0 : currentTime / duration;\r\n\r\n    //先mock一份currentIndex\r\n    // useEffect(() => {\r\n    //     changeCurrentIndexDispatch(0);\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if (\r\n            !playList.length ||\r\n            currentIndex === -1 ||\r\n            !playList[currentIndex] ||\r\n            playList[currentIndex].id === preSong.id\r\n        )\r\n            return;\r\n        let current = playList[currentIndex];\r\n        setPreSong(current);\r\n        songReady.current = false; // 把标志位置为 false, 表示现在新的资源没有缓冲完成，不能切歌\r\n        changeCurrentDispatch(current);//赋值currentSong\r\n        audioRef.current.src = getSongUrl(current.id);\r\n        setTimeout(() => {\r\n            audioRef.current.play().then(() => {\r\n                songReady.current = true;\r\n            }, (err) => { console.log(err) });\r\n        }, 300);\r\n        togglePlayingDispatch(true);//播放状态\r\n        getLyric(current.id);\r\n        setCurrentTime(0);//从头开始播放\r\n        setDuration((current.dt / 1000) | 0);//时长\r\n    }, [playList, currentIndex]);\r\n\r\n\r\n    useEffect(() => {\r\n        playing ? audioRef.current.play() : audioRef.current.pause();\r\n    }, [playing]);\r\n\r\n    const clickPlaying = (e, state) => {\r\n        e.stopPropagation();\r\n        togglePlayingDispatch(state);\r\n        // console.log('play')\r\n        if (currentLyric.current) {\r\n            currentLyric.current.togglePlay(currentTime * 1000);\r\n        }\r\n    };\r\n\r\n    const updateTime = e => {\r\n        setCurrentTime(e.target.currentTime);\r\n    };\r\n\r\n    // 更新进度条\r\n    const onProgressChange = curPercent => {\r\n        const newTime = curPercent * duration;\r\n        setCurrentTime(newTime);\r\n        audioRef.current.currentTime = newTime;\r\n        if (!playing) {\r\n            togglePlayingDispatch(true);\r\n        }\r\n        if (currentLyric.current) {\r\n            currentLyric.current.seek(newTime * 1000);\r\n        }\r\n    };\r\n\r\n    //一首歌循环\r\n    const handleLoop = () => {\r\n        audioRef.current.currentTime = 0;\r\n        changePlayingState(true);\r\n        audioRef.current.play();\r\n    };\r\n\r\n    const handlePrev = () => {\r\n        //播放列表只有一首歌时单曲循环\r\n        if (playList.length === 1) {\r\n            handleLoop();\r\n            return;\r\n        }\r\n        let index = currentIndex - 1;\r\n        if (index < 0) index = playList.length - 1;\r\n        if (!playing) togglePlayingDispatch(true);\r\n        changeCurrentIndexDispatch(index);\r\n    };\r\n\r\n    const handleNext = () => {\r\n        //播放列表只有一首歌时单曲循环\r\n        if (playList.length === 1) {\r\n            handleLoop();\r\n            return;\r\n        }\r\n        let index = currentIndex + 1;\r\n        if (index === playList.length) index = 0;\r\n        if (!playing) togglePlayingDispatch(true);\r\n        changeCurrentIndexDispatch(index);\r\n    };\r\n\r\n    const changeMode = () => {\r\n        let newMode = (mode + 1) % 3;\r\n        if (newMode === 0) {\r\n            //顺序模式\r\n            changePlayListDispatch(sequencePlayList);\r\n            let index = findIndex(currentSong, sequencePlayList);\r\n            changeCurrentIndexDispatch(index);\r\n            setModeText(\"顺序循环\");\r\n        } else if (newMode === 1) {\r\n            //单曲循环\r\n            changePlayListDispatch(sequencePlayList);\r\n            setModeText(\"单曲循环\");\r\n        } else if (newMode === 2) {\r\n            //随机播放\r\n            let newList = shuffle(sequencePlayList);\r\n            let index = findIndex(currentSong, newList);\r\n            changePlayListDispatch(newList);\r\n            changeCurrentIndexDispatch(index);\r\n            setModeText(\"随机播放\");\r\n        }\r\n        changeModeDispatch(newMode);\r\n        toastRef.current.show();\r\n    };\r\n\r\n    const handleEnd = () => {\r\n        if (mode === playMode.loop) {\r\n            handleLoop();\r\n        } else {\r\n            handleNext();\r\n        }\r\n    }\r\n\r\n    const handleError = () => {\r\n        songReady.current = true;\r\n        console.log(\"播放出错\");\r\n    };\r\n\r\n    const handleLyric = ({ lineNum, txt }) => {\r\n        if (!currentLyric.current) return;\r\n        currentLineNum.current = lineNum;\r\n        setPlayingLyric(txt);\r\n    };\r\n\r\n    const getLyric = id => {\r\n        let lyric = \"\";\r\n        if (currentLyric.current) {\r\n            console.log(currentLyric.current)\r\n            currentLyric.current.stop();\r\n        }\r\n        // 避免 songReady 恒为 false 的情况\r\n        setTimeout(() => {\r\n            songReady.current = true;\r\n        }, 3000);\r\n        getLyricRequest(id)\r\n            .then(data => {\r\n                lyric = data.lrc.lyric;\r\n                if (!lyric) {\r\n                    currentLyric.current = null;\r\n                    return;\r\n                }\r\n                currentLyric.current = new Lyric(lyric, handleLyric);\r\n                currentLyric.current.play();\r\n                currentLineNum.current = 0;\r\n                currentLyric.current.seek(0);\r\n            })\r\n            .catch(() => {\r\n                console.log('catch')\r\n                songReady.current = true;\r\n                audioRef.current.play();\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            { isEmptyObject(currentSong) ? null :\r\n                <MiniPlayer\r\n                    playing={playing}\r\n                    song={currentSong}\r\n                    fullScreen={fullScreen}\r\n                    toggleFullScreen={toggleFullScreenDispatch}\r\n                    clickPlaying={clickPlaying}\r\n                    percent={percent}\r\n                    togglePlayList={togglePlayListDispatch}\r\n                />}\r\n            {isEmptyObject(currentSong) ? null :\r\n                <NormalPlayer\r\n                    song={currentSong}\r\n                    fullScreen={fullScreen}\r\n                    toggleFullScreen={toggleFullScreenDispatch}\r\n                    percent={percent}\r\n                    playing={playing}\r\n                    duration={duration}//总时长\r\n                    currentTime={currentTime}//播放时间\r\n                    clickPlaying={clickPlaying}\r\n                    onProgressChange={onProgressChange}\r\n                    handlePrev={handlePrev}\r\n                    handleNext={handleNext}\r\n                    mode={mode}\r\n                    changeMode={changeMode}\r\n                    togglePlayList={togglePlayListDispatch}\r\n                    currentLyric={currentLyric.current}\r\n                    currentPlayingLyric={currentPlayingLyric}\r\n                    currentLineNum={currentLineNum.current}\r\n                />}\r\n            <audio ref={audioRef} onTimeUpdate={updateTime} onEnded={handleEnd} onError={handleError}></audio>\r\n            <PlayList></PlayList>\r\n            <Toast text={modeText} ref={toastRef}></Toast>\r\n        </div>\r\n    )\r\n}\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = state => ({\r\n    fullScreen: state.getIn([\"player\", \"fullScreen\"]),\r\n    playing: state.getIn([\"player\", \"playing\"]),\r\n    currentSong: state.getIn([\"player\", \"currentSong\"]),\r\n    showPlayList: state.getIn([\"player\", \"showPlayList\"]),\r\n    mode: state.getIn([\"player\", \"mode\"]),\r\n    currentIndex: state.getIn([\"player\", \"currentIndex\"]),\r\n    playList: state.getIn([\"player\", \"playList\"]),\r\n    sequencePlayList: state.getIn([\"player\", \"sequencePlayList\"])\r\n});\r\n\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        togglePlayingDispatch(data) {\r\n            dispatch(changePlayingState(data));\r\n        },\r\n        toggleFullScreenDispatch(data) {\r\n            dispatch(changeFullScreen(data));\r\n        },\r\n        togglePlayListDispatch(data) {\r\n            dispatch(changeShowPlayList(data));\r\n        },\r\n        changeCurrentIndexDispatch(index) {\r\n            dispatch(changeCurrentIndex(index));\r\n        },\r\n        changeCurrentDispatch(data) {\r\n            dispatch(changeCurrentSong(data));\r\n        },\r\n        changeModeDispatch(data) {\r\n            dispatch(changePlayMode(data));\r\n        },\r\n        changePlayListDispatch(data) {\r\n            dispatch(changePlayList(data));\r\n        }\r\n    };\r\n};\r\n\r\n// 将 ui 组件包装成容器组件\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(React.memo(Player));","import React from 'react';\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { Top, TabItem, Tab } from './style'\r\nimport { NavLink } from 'react-router-dom';// 利用 NavLink 组件进行路由跳转\r\nimport Player from '../Player';\r\n\r\nfunction Home(props) {\r\n  const { route } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Top>\r\n        <span className=\"iconfont menu\">&#xe65c;</span>\r\n        <span className=\"title\">zxx的专属app</span>\r\n        <span className=\"iconfont search\" onClick={() => props.history.push ('/search')}>&#xe62b;</span>\r\n      </Top>\r\n      <Tab>\r\n          <NavLink to=\"/recommend\" activeClassName=\"selected\">\r\n            <TabItem>\r\n              <span > 推荐 </span>\r\n            </TabItem>\r\n          </NavLink>\r\n          <NavLink to=\"/singers\" activeClassName=\"selected\">\r\n            <TabItem>\r\n              <span > 歌手 </span>\r\n            </TabItem>\r\n          </NavLink>\r\n          <NavLink to=\"/rank\" activeClassName=\"selected\">\r\n            <TabItem>\r\n              <span > 排行榜 </span>\r\n            </TabItem>\r\n          </NavLink>\r\n      </Tab>\r\n\r\n      { renderRoutes(route.routes)}\r\n      <Player></Player>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Home);","import React, { lazy, Suspense } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Home from '../application/Home';\r\nconst RecommendComponent = lazy(() => import(\"../application/Recommend/\"));\r\nconst SingersComponent = lazy(() => import(\"../application/Singers/\"));\r\nconst RankComponent = lazy(() => import(\"../application/Rank/\"));\r\nconst AlbumComponent = lazy(() => import(\"../application/Album/\"));\r\nconst SingerComponent = lazy(() => import(\"./../application/Singer/\"));\r\nconst SearchComponent = lazy(() => import(\"./../application/Search/\"));\r\n\r\nconst SuspenseComponent = Component => props => {\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Component {...props}></Component>\r\n    </Suspense>\r\n  )\r\n}\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    component: Home,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        render: () => (\r\n          <Redirect to={\"/recommend\"} />\r\n        )\r\n      },\r\n      {\r\n        path: \"/recommend/\",\r\n        component: SuspenseComponent(RecommendComponent),\r\n        routes: [\r\n          {\r\n            path: \"/recommend/:id\",\r\n            component: SuspenseComponent(AlbumComponent)\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: \"/singers\",\r\n        component: SuspenseComponent(SingersComponent),\r\n        routes: [\r\n          {\r\n            path: '/singers/:id',\r\n            component: SuspenseComponent(SingerComponent)\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: \"/rank/\",\r\n        component: SuspenseComponent(RankComponent),\r\n        key: \"rank\",\r\n        routes: [\r\n          {\r\n            path: \"/rank/:id\",\r\n            component: SuspenseComponent(AlbumComponent)\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: \"/album/:id\",\r\n        exact: true,\r\n        key: \"album\",\r\n        component: SuspenseComponent(AlbumComponent)\r\n      },\r\n      {\r\n        path: \"/search\",\r\n        exact: true,\r\n        key: \"search\",\r\n        component: SuspenseComponent(SearchComponent)\r\n      }\r\n    ]\r\n  }\r\n]","import * as actionTypes from './constants';\r\nimport { fromJS } from 'immutable';// 这里用到 fromJS 把 JS 数据结构转化成 immutable 数据结构\r\n\r\nconst defaultState = fromJS ({\r\n  bannerList: [],\r\n  recommendList: [],\r\n  enterLoading:true\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.CHANGE_BANNER:\r\n          // console.log(action.data)\r\n        return state.set ('bannerList', action.data);\r\n      case actionTypes.CHANGE_RECOMMEND_LIST:\r\n        // console.log(action.data)\r\n        return state.set ('recommendList', action.data);\r\n      case actionTypes.CHANGE_ENTER_LOADING:\r\n        return state.set('enterLoading', action.data)\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { fromJS } from 'immutable';\r\nimport * as actionTypes from './constants'\r\n\r\nconst defaultState = fromJS({\r\n  singerList: [],\r\n  enterLoading: true,     //控制进场Loading\r\n  pullUpLoading: false,   //控制上拉加载动画\r\n  pullDownLoading: false, //控制下拉加载动画\r\n  pageCount: 0            //这里是当前页数，我们即将实现分页功能\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch(action.type) {\r\n      case actionTypes.CHANGE_SINGER_LIST:\r\n        console.log(action.data)\r\n        return state.set('singerList', action.data);\r\n      case actionTypes.CHANGE_PAGE_COUNT:\r\n        return state.set('pageCount', action.data);\r\n      case actionTypes.CHANGE_ENTER_LOADING:\r\n        return state.set('enterLoading', action.data);\r\n      case actionTypes.CHANGE_PULLUP_LOADING:\r\n        return state.set('pullUpLoading', action.data);\r\n      case actionTypes.CHANGE_PULLDOWN_LOADING:\r\n        return state.set('pullDownLoading', action.data);\r\n      default:\r\n        return state;\r\n    }\r\n  }","import * as actionTypes from './constants.js';\r\nimport { fromJS } from 'immutable';\r\n\r\nconst defaultState = fromJS ({\r\n  currentAlbum: {},\r\n  enterLoading: false,\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n      case actionTypes.CHANGE_CURRENT_ALBUM:\r\n        return state.set ('currentAlbum', action.data);\r\n      case actionTypes.CHANGE_ENTER_LOADING:\r\n        return state.set ('enterLoading', action.data);\r\n      default:\r\n        return state;\r\n    }\r\n  };","import * as actionTypes from './constants';\r\nimport { fromJS } from 'immutable';\r\n\r\nconst defaultState = fromJS({\r\n    artist: {},\r\n    songsOfArtist: [],\r\n    loading: true\r\n});\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.CHANGE_ARTIST:\r\n            return state.set('artist', action.data);\r\n        case actionTypes.CHANGE_SONGS_OF_ARTIST:\r\n            return state.set('songsOfArtist', action.data);\r\n        case actionTypes.CHANGE_ENTER_LOADING:\r\n            return state.set('loading', action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from './constants';\r\nimport { fromJS } from 'immutable';\r\nimport { playMode } from './../../../api/config';\r\nimport { findIndex } from '../../../api/utils';// 注意引入工具方法\r\n\r\nconst defaultState = fromJS({\r\n    fullScreen: false,// 播放器是否为全屏模式\r\n    playing: false, // 当前歌曲是否播放\r\n    sequencePlayList: [\r\n        // mock一份playList，后面直接从 redux 拿，现在只是为了调试播放效果。\r\n        // {\r\n        //     ftype: 0,\r\n        //     djId: 0,\r\n        //     a: null,\r\n        //     cd: '01',\r\n        //     crbt: null,\r\n        //     no: 1,\r\n        //     st: 0,\r\n        //     rt: '',\r\n        //     cf: '',\r\n        //     alia: [\r\n        //         '手游《梦幻花园》苏州园林版推广曲'\r\n        //     ],\r\n        //     rtUrls: [],\r\n        //     fee: 0,\r\n        //     s_id: 0,\r\n        //     copyright: 0,\r\n        //     h: {\r\n        //         br: 320000,\r\n        //         fid: 0,\r\n        //         size: 9400365,\r\n        //         vd: -45814\r\n        //     },\r\n        //     mv: 0,\r\n        //     al: {\r\n        //         id: 84991301,\r\n        //         name: '拾梦纪',\r\n        //         picUrl: 'http://p1.music.126.net/M19SOoRMkcHmJvmGflXjXQ==/109951164627180052.jpg',\r\n        //         tns: [],\r\n        //         pic_str: '109951164627180052',\r\n        //         pic: 109951164627180050\r\n        //     },\r\n        //     name: '拾梦纪',\r\n        //     l: {\r\n        //         br: 128000,\r\n        //         fid: 0,\r\n        //         size: 3760173,\r\n        //         vd: -41672\r\n        //     },\r\n        //     rtype: 0,\r\n        //     m: {\r\n        //         br: 192000,\r\n        //         fid: 0,\r\n        //         size: 5640237,\r\n        //         vd: -43277\r\n        //     },\r\n        //     cp: 1416668,\r\n        //     mark: 0,\r\n        //     rtUrl: null,\r\n        //     mst: 9,\r\n        //     dt: 234947,\r\n        //     ar: [\r\n        //         {\r\n        //             id: 12084589,\r\n        //             name: '妖扬',\r\n        //             tns: [],\r\n        //             alias: []\r\n        //         },\r\n        //         {\r\n        //             id: 12578371,\r\n        //             name: '金天',\r\n        //             tns: [],\r\n        //             alias: []\r\n        //         }\r\n        //     ],\r\n        //     pop: 5,\r\n        //     pst: 0,\r\n        //     t: 0,\r\n        //     v: 3,\r\n        //     id: 1416767593,\r\n        //     publishTime: 0,\r\n        //     rurl: null\r\n        // }\r\n    ], // 顺序列表 (因为之后会有随机模式，列表会乱序，因从拿这个保存顺序列表)\r\n    playList: [\r\n        // mock一份playList，后面直接从 redux 拿，现在只是为了调试播放效果。\r\n        // {\r\n        //     ftype: 0,\r\n        //     djId: 0,\r\n        //     a: null,\r\n        //     cd: '01',\r\n        //     crbt: null,\r\n        //     no: 1,\r\n        //     st: 0,\r\n        //     rt: '',\r\n        //     cf: '',\r\n        //     alia: [\r\n        //         '手游《梦幻花园》苏州园林版推广曲'\r\n        //     ],\r\n        //     rtUrls: [],\r\n        //     fee: 0,\r\n        //     s_id: 0,\r\n        //     copyright: 0,\r\n        //     h: {\r\n        //         br: 320000,\r\n        //         fid: 0,\r\n        //         size: 9400365,\r\n        //         vd: -45814\r\n        //     },\r\n        //     mv: 0,\r\n        //     al: {\r\n        //         id: 84991301,\r\n        //         name: '拾梦纪',\r\n        //         picUrl: 'http://p1.music.126.net/M19SOoRMkcHmJvmGflXjXQ==/109951164627180052.jpg',\r\n        //         tns: [],\r\n        //         pic_str: '109951164627180052',\r\n        //         pic: 109951164627180050\r\n        //     },\r\n        //     name: '拾梦纪',\r\n        //     l: {\r\n        //         br: 128000,\r\n        //         fid: 0,\r\n        //         size: 3760173,\r\n        //         vd: -41672\r\n        //     },\r\n        //     rtype: 0,\r\n        //     m: {\r\n        //         br: 192000,\r\n        //         fid: 0,\r\n        //         size: 5640237,\r\n        //         vd: -43277\r\n        //     },\r\n        //     cp: 1416668,\r\n        //     mark: 0,\r\n        //     rtUrl: null,\r\n        //     mst: 9,\r\n        //     dt: 234947,\r\n        //     ar: [\r\n        //         {\r\n        //             id: 12084589,\r\n        //             name: '妖扬',\r\n        //             tns: [],\r\n        //             alias: []\r\n        //         },\r\n        //         {\r\n        //             id: 12578371,\r\n        //             name: '金天',\r\n        //             tns: [],\r\n        //             alias: []\r\n        //         }\r\n        //     ],\r\n        //     pop: 5,\r\n        //     pst: 0,\r\n        //     t: 0,\r\n        //     v: 3,\r\n        //     id: 1416767593,\r\n        //     publishTime: 0,\r\n        //     rurl: null\r\n        // }\r\n    ],\r\n    mode: playMode.sequence,// 播放模式\r\n    currentIndex: -1,// 当前歌曲在播放列表的索引位置\r\n    showPlayList: false,// 是否展示播放列表\r\n    currentSong: {}\r\n});\r\n\r\nconst handleDeleteSong = (state, song) => {\r\n    // 也可用 loadsh 库的 deepClone 方法。这里深拷贝是基于纯函数的考虑，不对参数 state 做修改\r\n    const playList = JSON.parse(JSON.stringify(state.get('playList').toJS()));\r\n    const sequenceList = JSON.parse(JSON.stringify(state.get('sequencePlayList').toJS()));\r\n    let currentIndex = state.get('currentIndex');\r\n    // 找对应歌曲在播放列表中的索引\r\n    const fpIndex = findIndex(song, playList);\r\n    // 在播放列表中将其删除\r\n    playList.splice(fpIndex, 1);\r\n    // 如果删除的歌曲排在当前播放歌曲前面，那么 currentIndex--，让当前的歌正常播放\r\n    if (fpIndex < currentIndex) currentIndex--;\r\n\r\n    // 在 sequenceList 中直接删除歌曲即可\r\n    const fsIndex = findIndex(song, sequenceList);\r\n    sequenceList.splice(fsIndex, 1);\r\n\r\n    return state.merge({\r\n        'playList': fromJS(playList),\r\n        'sequencePlayList': fromJS(sequenceList),\r\n        'currentIndex': fromJS(currentIndex),\r\n    });\r\n}\r\n\r\nconst handleInsertSong = (state, song) => {\r\n    const playList = JSON.parse(JSON.stringify(state.get('playList').toJS()));\r\n    const sequenceList = JSON.parse(JSON.stringify(state.get('sequencePlayList').toJS()));\r\n    let currentIndex = state.get('currentIndex');\r\n    // 看看有没有同款\r\n    let fpIndex = findIndex(song, playList);\r\n    // 如果是当前歌曲直接不处理\r\n    if (fpIndex === currentIndex && currentIndex !== -1) return state;\r\n    currentIndex++;\r\n    // 把歌放进去，放到当前播放曲目的下一个位置\r\n    playList.splice(currentIndex, 0, song);\r\n    // 如果列表中已经存在要添加的歌，暂且称它 oldSong\r\n    if (fpIndex > -1) {\r\n        // 如果 oldSong 的索引在目前播放歌曲的索引小，那么删除它，同时当前 index 要减一\r\n        if (currentIndex > fpIndex) {\r\n            playList.splice(fpIndex, 1);\r\n            currentIndex--;\r\n        } else {\r\n            // 否则直接删掉 oldSong\r\n            playList.splice(fpIndex + 1, 1);\r\n        }\r\n    }\r\n    // 同理，处理 sequenceList\r\n    let sequenceIndex = findIndex(playList[currentIndex], sequenceList) + 1;\r\n    let fsIndex = findIndex(song, sequenceList);\r\n    // 插入歌曲\r\n    sequenceList.splice(sequenceIndex, 0, song);\r\n    if (fsIndex > -1) {\r\n        // 跟上面类似的逻辑。如果在前面就删掉，index--; 如果在后面就直接删除\r\n        if (sequenceIndex > fsIndex) {\r\n            sequenceList.splice(fsIndex, 1);\r\n            sequenceIndex--;\r\n        } else {\r\n            sequenceList.splice(fsIndex + 1, 1);\r\n        }\r\n    }\r\n    return state.merge({\r\n        'playList': fromJS(playList),\r\n        'sequencePlayList': fromJS(sequenceList),\r\n        'currentIndex': fromJS(currentIndex),\r\n    });\r\n}\r\n\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_CURRENT_SONG:\r\n            return state.set('currentSong', action.data);\r\n        case actionTypes.SET_FULL_SCREEN:\r\n            return state.set('fullScreen', action.data);\r\n        case actionTypes.SET_PLAYING_STATE:\r\n            return state.set('playing', action.data);\r\n        case actionTypes.SET_SEQUECE_PLAYLIST:\r\n            return state.set('sequencePlayList', action.data);\r\n        case actionTypes.SET_PLAYLIST:\r\n            return state.set('playList', action.data);\r\n        case actionTypes.SET_PLAY_MODE:\r\n            return state.set('mode', action.data);\r\n        case actionTypes.SET_CURRENT_INDEX:\r\n            return state.set('currentIndex', action.data);\r\n        case actionTypes.SET_SHOW_PLAYLIST:\r\n            return state.set('showPlayList', action.data);\r\n        case actionTypes.DELETE_SONG:\r\n            return handleDeleteSong(state, action.data);\r\n        case actionTypes.INSERT_SONG:\r\n            return handleInsertSong(state, action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from './constants';\r\nimport { fromJS } from 'immutable';\r\n\r\nconst defaultState = fromJS({\r\n    hotList: [], // 热门关键词列表\r\n    suggestList: [],// 列表，包括歌单和歌手\r\n    songsList: [],// 歌曲列表\r\n    enterLoading: false\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_HOT_KEYWRODS:\r\n            return state.set('hotList', action.data);\r\n        case actionTypes.SET_SUGGEST_LIST:\r\n            return state.set('suggestList', action.data);\r\n        case actionTypes.SET_RESULT_SONGS_LIST:\r\n            return state.set('songsList', action.data);\r\n        case actionTypes.SET_ENTER_LOADING:\r\n            return state.set('enterLoading', action.data);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux-immutable';\r\nimport { reducer as recommendReducer } from '../application/Recommend/store';\r\nimport { reducer as singersReducer } from '../application/Singers/store'\r\nimport {reducer as rankReducer} from '../application/Rank/store'\r\nimport {reducer as albumReducer } from '../application/Album/store'\r\nimport { reducer as singerInfoReducer } from \"../application/Singer/store\";\r\nimport { reducer as playerReducer } from \"../application/Player/store\";\r\nimport {reducer as searchReducer} from '../application/Search/store/index.js'\r\n\r\nexport default combineReducers ({\r\n  recommend: recommendReducer,\r\n  singers:singersReducer,\r\n  rank:rankReducer,\r\n  album:albumReducer,\r\n  singerInfo: singerInfoReducer,\r\n  player: playerReducer,\r\n  search: searchReducer,\r\n});","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore (reducer, composeEnhancers (\r\n  applyMiddleware (thunk)\r\n));\r\n\r\nexport default store;","import React from 'react';\r\nimport { IconStyle } from './assets/iconfont/iconfont';\r\nimport { GlobalStyle } from './style';\r\nimport routes from \"./routes/index\";\r\nimport { renderRoutes } from \"react-router-config\";//renderRoutes 读取路由配置转化为 Route 标签\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport {Data} from './application/Singers/data'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <GlobalStyle></GlobalStyle>\r\n        <IconStyle></IconStyle>\r\n        <Data>\r\n          {renderRoutes(routes)}\r\n        </Data>\r\n      </HashRouter>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const SET_HOT_KEYWRODS = \"search/SET_HOT_KEYWRODS\";\r\nexport const SET_SUGGEST_LIST = 'search/SET_SUGGEST_LIST';\r\nexport const SET_RESULT_SONGS_LIST = 'search/SET_RESULT_SONGS_LIST'; \r\nexport const SET_ENTER_LOADING = 'search/SET_ENTER_LOADING'; \r\n","export const CHANGE_SINGER_LIST = 'singers/CHANGE_SINGER_LIST';\r\nexport const CHANGE_PAGE_COUNT = 'singers/PAGE_COUNT';\r\nexport const CHANGE_ENTER_LOADING = 'singers/ENTER_LOADING';\r\nexport const CHANGE_PULLUP_LOADING = 'singers/PULLUP_LOADING';\r\nexport const CHANGE_PULLDOWN_LOADING = 'singers/PULLDOWN_LOADING';","export const CHANGE_BANNER = 'recommend/CHANGE_BANNER';\r\n\r\nexport const CHANGE_RECOMMEND_LIST = 'recommend/RECOMMEND_LIST';\r\n\r\nexport const CHANGE_ENTER_LOADING = 'recommend/CHANGE_ENTER_LOADING';","export const CHANGE_ARTIST = 'singer/CHANGE_ARTIST';\r\nexport const CHANGE_SONGS_OF_ARTIST = 'singer/CHANGE_SONGS_OF_ARTIST';\r\nexport const CHANGE_ENTER_LOADING = 'singer/CHNAGE_ENTER_LOADING';","export const CHANGE_CURRENT_ALBUM = 'album/CHANGE_CURRENT_ALBUM';\r\nexport const CHANGE_ENTER_LOADING = 'album/CHANGE_ENTER_LOADING';","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport style from '../../assets/global-style'\r\n\r\nconst dance = keyframes`\r\n    0%, 40%, 100%{\r\n      transform: scaleY(0.4);\r\n      transform-origin: center 100%;\r\n    }\r\n    20%{\r\n      transform: scaleY(1);\r\n    }\r\n`\r\nconst Loading = styled.div`\r\n    height: 10px;\r\n    width: 100%;\r\n    margin: auto;\r\n    text-align: center;\r\n    font-size: 10px;\r\n    >div {\r\n      display: inline-block;\r\n      background-color: ${style[\"theme-color\"]};\r\n      height: 100%;\r\n      width: 1px;\r\n      margin-right:2px;\r\n      animation: ${dance} 1s infinite;\r\n    }\r\n    >div:nth-child (2) {\r\n      animation-delay: -0.4s;\r\n    }\r\n    >div:nth-child (3) {\r\n      animation-delay: -0.6s;\r\n    }\r\n    >div:nth-child (4) {\r\n      animation-delay: -0.5s;\r\n    }\r\n    >div:nth-child (5) {\r\n      animation-delay: -0.2s;\r\n    } \r\n\r\n`\r\n\r\nfunction LoadingV2() {\r\n    return (\r\n        <Loading>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <span > 拼命加载中...</span>\r\n        </Loading>\r\n    );\r\n}\r\n\r\nexport default React.memo(LoadingV2);","import React, { forwardRef, useMemo , useState, useEffect, useRef, useImperativeHandle } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport BScroll from \"better-scroll\"\r\nimport styled from 'styled-components';\r\nimport Loading from '../loading/index';\r\nimport LoadingV2 from '../loading-v2/index';\r\nimport {debounce} from '../../api/utils'\r\n\r\nconst ScrollContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`\r\nconst PullUpLoading = styled.div`\r\n  position: absolute;\r\n  left:0; right:0;\r\n  bottom: 5px;\r\n  width: 60px;\r\n  height: 60px;\r\n  margin: auto;\r\n  z-index: 100;\r\n`;\r\n\r\nexport const PullDownLoading = styled.div`\r\n  position: absolute;\r\n  left:0; right:0;\r\n  top: 0px;\r\n  height: 30px;\r\n  margin: auto;\r\n  z-index: 100;\r\n`;\r\n\r\nconst Scroll = forwardRef((props, ref) => {\r\n  const [bScroll, setBScroll] = useState();\r\n\r\n  const scrollContaninerRef = useRef();\r\n\r\n  const { direction, click, refresh, bounceTop, bounceBottom } = props;\r\n\r\n  const { pullUp, pullDown, onScroll, pullUpLoading, pullDownLoading } = props;\r\n\r\n  const PullUpdisplayStyle = pullUpLoading ? { display: \"\" } : { display: \"none\" };\r\n  const PullDowndisplayStyle = pullDownLoading ? { display: \"\" } : { display: \"none\" };\r\n\r\n\r\n  let pullUpDebounce = useMemo (() => {\r\n    return debounce (pullUp, 300)\r\n  }, [pullUp]);\r\n  // 千万注意，这里不能省略依赖，\r\n  // 不然拿到的始终是第一次 pullUp 函数的引用，相应的闭包作用域变量都是第一次的，产生闭包陷阱。下同。\r\n  \r\n  let pullDownDebounce = useMemo (() => {\r\n    return debounce (pullDown, 300)\r\n  }, [pullDown]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const scroll = new BScroll(scrollContaninerRef.current, {\r\n      scrollX: direction === \"horizental\",\r\n      scrollY: direction === \"vertical\",\r\n      probeType: 3,\r\n      click: click,\r\n      bounce: {\r\n        top: bounceTop,\r\n        bottom: bounceBottom\r\n      }\r\n    });\r\n\r\n    setBScroll(scroll);\r\n    return () => {\r\n      setBScroll(null);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!bScroll || !onScroll) return;\r\n    bScroll.on('scroll', (scroll) => {\r\n      onScroll(scroll);\r\n    })\r\n    return () => {\r\n      bScroll.off('scroll');\r\n    }\r\n  }, [onScroll, bScroll]);\r\n\r\n  useEffect(() => {\r\n    if (!bScroll || !pullUp) return;\r\n    bScroll.on('scrollEnd', () => {\r\n      // 判断是否滑动到了底部\r\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\r\n        pullUpDebounce();\r\n      }\r\n    });\r\n    return () => {\r\n      bScroll.off('scrollEnd');\r\n    }\r\n  }, [pullUp, bScroll]);\r\n\r\n  useEffect(() => {\r\n    if (!bScroll || !pullDown) return;\r\n    bScroll.on('touchEnd', (pos) => {\r\n      // 判断用户的下拉动作\r\n      if (pos.y > 50) {\r\n        pullDownDebounce();\r\n      }\r\n    });\r\n    return () => {\r\n      bScroll.off('touchEnd');\r\n    }\r\n  }, [pullDown, bScroll]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (refresh && bScroll) {\r\n      bScroll.refresh();\r\n    }\r\n  });\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    refresh() {\r\n      if (bScroll) {\r\n        bScroll.refresh();\r\n        bScroll.scrollTo(0, 0);\r\n      }\r\n    },\r\n    getBScroll() {\r\n      if (bScroll) {\r\n        return bScroll;\r\n      }\r\n    }\r\n  }));\r\n\r\n\r\n  return (\r\n    <ScrollContainer ref={scrollContaninerRef}>\r\n      {props.children}\r\n      {/* 滑到底部加载动画 */}\r\n      <PullUpLoading style={PullUpdisplayStyle}>\r\n        <Loading></Loading>\r\n      </PullUpLoading>\r\n      {/* 顶部下拉刷新动画 */}\r\n      <PullDownLoading style={PullDowndisplayStyle}>\r\n        <LoadingV2></LoadingV2>\r\n      </PullDownLoading>\r\n    </ScrollContainer>\r\n  );\r\n})\r\n\r\nScroll.defaultProps = {\r\n  direction: \"vertical\",\r\n  click: true,\r\n  refresh: true,\r\n  onScroll: null,\r\n  pullUpLoading: false,\r\n  pullDownLoading: false,\r\n  pullUp: null,\r\n  pullDown: null,\r\n  bounceTop: true,\r\n  bounceBottom: true\r\n};\r\n\r\nScroll.propTypes = {\r\n  direction: PropTypes.oneOf(['vertical', 'horizental']),\r\n  refresh: PropTypes.bool,\r\n  onScroll: PropTypes.func,\r\n  pullUp: PropTypes.func,\r\n  pullDown: PropTypes.func,\r\n  pullUpLoading: PropTypes.bool,\r\n  pullDownLoading: PropTypes.bool,\r\n  bounceTop: PropTypes.bool,// 是否支持向上吸顶\r\n  bounceBottom: PropTypes.bool// 是否支持向上吸顶\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport style from '../../assets/global-style';\r\nimport {PropTypes} from 'prop-types'\r\n\r\nconst loading = keyframes`\r\n  0%, 100% {\r\n    transform: scale(0.0);\r\n  }\r\n  50% {\r\n    transform: scale(1.0);\r\n  }\r\n`\r\nconst LoadingWrapper = styled.div`\r\n  >div {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    left: 0; \r\n    right: 0;  \r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    width: 60px;\r\n    height: 60px;\r\n    opacity: 0.6;\r\n    border-radius: 50%;\r\n    background-color: ${style[\"theme-color\"]};\r\n    animation: ${loading} 1.4s infinite ease-in;\r\n  }\r\n  >div:nth-child (2) {\r\n    animation-delay: -0.7s;\r\n  }\r\n`\r\n\r\nfunction Loading(props) {\r\n  const {show} = props\r\n    return (\r\n        <LoadingWrapper style={show?{'display':''}:{'display':'none'}}>\r\n            <div></div>\r\n            <div></div>\r\n        </LoadingWrapper>\r\n    );\r\n}\r\nLoading.defaultProps = {\r\n  show: true\r\n};\r\n\r\nLoading.propTypes = {\r\n  show: PropTypes.bool\r\n};\r\n\r\nexport default React.memo(Loading);","import * as actionTypes from './constants';\r\nimport { fromJS } from 'immutable';// 将 JS 对象转换成 immutable 对象\r\nimport { getBannerRequest, getRecommendListRequest } from '../../../api/request';\r\n\r\nexport const changeBannerList = (data) => ({\r\n  type: actionTypes.CHANGE_BANNER,\r\n  data: fromJS (data)\r\n});\r\n\r\nexport const changeRecommendList = (data) => ({\r\n  type: actionTypes.CHANGE_RECOMMEND_LIST,\r\n  data: fromJS (data)\r\n});\r\n\r\nexport const chageEnterLoading = (data)=>({\r\n  type: actionTypes.CHANGE_ENTER_LOADING,\r\n  data\r\n})\r\n\r\nexport const getBannerList = () => {\r\n  return (dispatch) => {\r\n    getBannerRequest ().then (data => {\r\n      dispatch (changeBannerList (data.banners));\r\n    }).catch (() => {\r\n      console.log (\"轮播图数据传输错误\");\r\n    }) \r\n  }\r\n};\r\n\r\nexport const getRecommendList = () => {\r\n  return (dispatch) => {\r\n    getRecommendListRequest ().then (data => {\r\n      dispatch (changeRecommendList (data.result));\r\n      dispatch(chageEnterLoading(false));//改变loading\r\n    }).catch (() => {\r\n      console.log (\"推荐歌单数据传输错误\");\r\n    });\r\n  }\r\n};\r\n","import {\r\n    getHotSingerListRequest,\r\n    getSingerListRequest\r\n  } from \"../../../api/request\";\r\n  import {\r\n    CHANGE_SINGER_LIST,\r\n    CHANGE_CATOGORY,\r\n    CHANGE_ALPHA,\r\n    CHANGE_PAGE_COUNT,\r\n    CHANGE_PULLUP_LOADING,\r\n    CHANGE_PULLDOWN_LOADING,\r\n    CHANGE_ENTER_LOADING\r\n  } from './constants';\r\n  import {\r\n    fromJS\r\n  } from 'immutable';\r\n  \r\n  \r\n  const changeSingerList = (data) => ({\r\n    type: CHANGE_SINGER_LIST,\r\n    data: fromJS(data)\r\n  });\r\n  \r\n  export const changePageCount = (data) => ({\r\n    type: CHANGE_PAGE_COUNT,\r\n    data\r\n  });\r\n  \r\n  //进场loading\r\n  export const changeEnterLoading = (data) => ({\r\n    type: CHANGE_ENTER_LOADING,\r\n    data\r\n  });\r\n  \r\n  //滑动最底部loading\r\n  export const changePullUpLoading = (data) => ({\r\n    type: CHANGE_PULLUP_LOADING,\r\n    data\r\n  });\r\n  \r\n  //顶部下拉刷新loading\r\n  export const changePullDownLoading = (data) => ({\r\n    type: CHANGE_PULLDOWN_LOADING,\r\n    data\r\n  });\r\n  \r\n  //第一次加载热门歌手\r\n  export const getHotSingerList = () => {\r\n    return (dispatch) => {\r\n      getHotSingerListRequest(0).then(res => {\r\n        const data = res.artists;\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changeEnterLoading(false));\r\n        dispatch(changePullDownLoading(false));\r\n      }).catch(() => {\r\n        console.log('热门歌手数据获取失败');\r\n      })\r\n    }\r\n  };\r\n  \r\n  //加载更多热门歌手\r\n  export const refreshMoreHotSingerList = () => {\r\n    return (dispatch, getState) => {\r\n      const pageCount = getState().getIn(['singers', 'pageCount']);\r\n      const singerList = getState().getIn(['singers', 'singerList']).toJS();\r\n      getHotSingerListRequest(pageCount).then(res => {\r\n        const data = [...singerList, ...res.artists];\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changePullUpLoading(false));\r\n      }).catch(() => {\r\n        console.log('热门歌手数据获取失败');\r\n      });\r\n    }\r\n  };\r\n  \r\n  //第一次加载对应类别的歌手\r\n  export const getSingerList = (category, alpha) => {\r\n    return (dispatch, getState) => {\r\n      getSingerListRequest(category, alpha, 0).then(res => {\r\n        const data = res.artists;\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changeEnterLoading(false));\r\n        dispatch(changePullDownLoading(false));\r\n      }).catch(() => {\r\n        console.log('歌手数据获取失败');\r\n      });\r\n    }\r\n  };\r\n  \r\n  //加载更多歌手\r\n  export const refreshMoreSingerList = (category, alpha) => {\r\n    return (dispatch, getState) => {\r\n      const pageCount = getState().getIn(['singers', 'pageCount']);\r\n      const singerList = getState().getIn(['singers', 'singerList']).toJS();\r\n      getSingerListRequest(category, alpha, pageCount).then(res => {\r\n        const data = [...singerList, ...res.artists];\r\n        dispatch(changeSingerList(data));\r\n        dispatch(changePullUpLoading(false));\r\n      }).catch(() => {\r\n        console.log('歌手数据获取失败');\r\n      });\r\n    }\r\n  };","import { CHANGE_CURRENT_ALBUM, CHANGE_ENTER_LOADING } from './constants';\r\nimport { getAlbumDetailRequest } from '../../../api/request';\r\nimport { fromJS } from 'immutable';\r\n\r\nconst changeCurrentAlbum = (data) => ({\r\n  type: CHANGE_CURRENT_ALBUM,\r\n  data: fromJS (data)\r\n});\r\n\r\nexport const changeEnterLoading = (data) => ({\r\n  type: CHANGE_ENTER_LOADING,\r\n  data\r\n});\r\n\r\nexport const getAlbumList = (id) => {\r\n  return dispatch => {\r\n    getAlbumDetailRequest (id).then (res => {\r\n      let data = res.playlist;\r\n      dispatch (changeCurrentAlbum (data));\r\n      dispatch (changeEnterLoading (false));\r\n    }).catch (() => {\r\n      console.log (\"获取 album 数据失败！\")\r\n    });\r\n  }\r\n};","import { CHANGE_SONGS_OF_ARTIST, CHANGE_ARTIST, CHANGE_ENTER_LOADING } from './constants';\r\nimport { fromJS } from 'immutable';\r\nimport { getSingerInfoRequest } from './../../../api/request';\r\n\r\nconst changeArtist = (data) => ({\r\n    type: CHANGE_ARTIST,\r\n    data: fromJS(data)\r\n});\r\n\r\nconst changeSongs = (data) => ({\r\n    type: CHANGE_SONGS_OF_ARTIST,\r\n    data: fromJS(data)\r\n})\r\nexport const changeEnterLoading = (data) => ({\r\n    type: CHANGE_ENTER_LOADING,\r\n    data\r\n})\r\n\r\nexport const getSingerInfo = (id) => {\r\n    return dispatch => {\r\n        getSingerInfoRequest(id).then(data => {\r\n            dispatch(changeArtist(data.artist));\r\n            dispatch(changeSongs(data.hotSongs));\r\n            dispatch(changeEnterLoading(false));\r\n        })\r\n    }\r\n}","import { SET_HOT_KEYWRODS, SET_SUGGEST_LIST, SET_RESULT_SONGS_LIST, SET_ENTER_LOADING } from './constants';\r\nimport { fromJS } from 'immutable';\r\nimport { getHotKeyWordsRequest, getSuggestListRequest, getResultSongsListRequest } from './../../../api/request';\r\n\r\nconst changeHotKeyWords = (data) => ({\r\n  type: SET_HOT_KEYWRODS,\r\n  data: fromJS (data)\r\n});\r\n\r\nconst changeSuggestList = (data) => ({\r\n  type: SET_SUGGEST_LIST,\r\n  data: fromJS (data)\r\n});\r\n\r\nconst changeResultSongs = (data) => ({\r\n  type: SET_RESULT_SONGS_LIST,\r\n  data: fromJS (data)\r\n});\r\n\r\nexport const changeEnterLoading = (data) => ({\r\n  type: SET_ENTER_LOADING,\r\n  data\r\n});\r\n\r\nexport const getHotKeyWords = () => {\r\n  return dispatch => {\r\n    getHotKeyWordsRequest ().then (data => {\r\n      // 拿到关键词列表\r\n      let list = data.result.hots;\r\n      dispatch (changeHotKeyWords (list));\r\n    })\r\n  }\r\n};\r\nexport const getSuggestList = (query) => {\r\n  return dispatch => {\r\n    getSuggestListRequest (query).then (data => {\r\n      console.log(data)\r\n      if (!data) return;\r\n      let res = data.result || [];\r\n      dispatch (changeSuggestList (res));\r\n    })\r\n    getResultSongsListRequest (query).then (data => {\r\n      if (!data) return;\r\n      let res = data.result.songs || [];\r\n      dispatch (changeResultSongs (res));\r\n      dispatch (changeEnterLoading (false));// 关闭 loading\r\n    })\r\n  }\r\n};","export const getCount = (count) => {\r\n  if (count < 0) return;\r\n  if (count < 10000) {\r\n    return count;\r\n  } else if (Math.floor(count / 10000) < 10000) {\r\n    return Math.floor(count / 1000) / 10 + \"万\";\r\n  } else {\r\n    return Math.floor(count / 10000000) / 10 + \"亿\";\r\n  }\r\n}\r\nexport const debounce = (func, delay) => {\r\n  let timer;\r\n  return function (...args) {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args);\r\n      clearTimeout(timer);\r\n    }, delay);\r\n  }\r\n}\r\n\r\n// 处理数据，找出第一个没有歌名的排行榜的索引\r\nexport const filterIndex = rankList => {\r\n  for (let i = 0; i < rankList.length - 1; i++) {\r\n    if (rankList[i].tracks.length && !rankList[i + 1].tracks.length) {\r\n      return i + 1;\r\n    }\r\n  }\r\n};\r\n\r\n// 处理歌手列表拼接歌手名字\r\nexport const getName = list => {\r\n  let str = \"\";\r\n  list.map((item, index) => {\r\n    str += index === 0 ? item.name : \"/\" + item.name;\r\n    return item;\r\n  });\r\n  return str;\r\n};\r\n\r\n// 判断一个对象是否为空\r\nexport const isEmptyObject = obj => !obj || Object.keys(obj).length === 0;\r\n\r\n// 给 css3 相关属性增加浏览器前缀，处理浏览器兼容性问题\r\nlet elementStyle = document.createElement(\"div\").style;\r\n\r\nlet vendor = (() => {\r\n  // 首先通过 transition 属性判断是何种浏览器\r\n  let transformNames = {\r\n    webkit: \"webkitTransform\",\r\n    Moz: \"MozTransform\",\r\n    O: \"OTransfrom\",\r\n    ms: \"msTransform\",\r\n    standard: \"Transform\"\r\n  };\r\n  for (let key in transformNames) {\r\n    if (elementStyle[transformNames[key]] !== undefined) {\r\n      return key;\r\n    }\r\n  }\r\n  return false;\r\n})();\r\n\r\nexport function prefixStyle(style) {\r\n  if (vendor === false) {\r\n    return false;\r\n  }\r\n  if (vendor === \"standard\") {\r\n    return style;\r\n  }\r\n  return vendor + style.charAt(0).toUpperCase() + style.substr(1);\r\n}\r\n\r\n//拼接出歌曲的url链接\r\nexport const getSongUrl = id => {\r\n  return `https://music.163.com/song/media/outer/url?id=${id}.mp3`;\r\n};\r\n\r\n//转换歌曲播放时间\r\nexport const formatPlayTime = interval => {\r\n  interval = interval | 0;// |0表示向下取整\r\n  const minute = (interval / 60) | 0;\r\n  const second = (interval % 60).toString().padStart(2, \"0\");\r\n  return `${minute}:${second}`;\r\n};\r\n\r\nfunction getRandomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n// 随机算法\r\nexport function shuffle(arr) {\r\n  let new_arr = [];\r\n  arr.forEach(item => {\r\n    new_arr.push(item);\r\n  });\r\n  for (let i = 0; i < new_arr.length; i++) {\r\n    let j = getRandomInt(0, i);\r\n    let t = new_arr[i];\r\n    new_arr[i] = new_arr[j];\r\n    new_arr[j] = t;\r\n  }\r\n  return new_arr;\r\n}\r\n\r\n// 找到当前的歌曲索引\r\nexport const findIndex = (song, list) => {\r\n  return list.findIndex(item => {\r\n    return song.id === item.id;\r\n  });\r\n};\r\n\r\n","import React, {createContext, useReducer} from 'react';\r\nimport { fromJS } from 'immutable';\r\n\r\n//context\r\nexport const CategoryDataContext = createContext ({});\r\n\r\n// 相当于之前的 constants\r\nexport const CHANGE_CATEGORY = 'singers/CHANGE_CATEGORY';\r\nexport const CHANGE_ALPHA = 'singers/CHANGE_ALPHA';\r\n\r\n//reducer 纯函数\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_CATEGORY:\r\n      return state.set ('category', action.data);\r\n    case CHANGE_ALPHA:\r\n      return state.set ('alpha', action.data);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Provider 组件\r\nexport const Data = props => {\r\n  //useReducer 的第二个参数中传入初始值\r\n  const [data, dispatch] = useReducer (reducer, fromJS ({\r\n    category: '',\r\n    alpha: ''\r\n  }));\r\n  return (\r\n    <CategoryDataContext.Provider value={{data, dispatch}}>\r\n      {props.children}\r\n    </CategoryDataContext.Provider>\r\n  )\r\n}","import { fromJS } from 'immutable';\r\nimport { CHANGE_LOADING, CHANGE_RANK_LIST } from './constants'\r\n\r\nconst defaultState = fromJS({\r\n  rankList: [],\r\n  loading: true\r\n})\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_RANK_LIST:\r\n      return state.set('rankList', action.data);\r\n    case CHANGE_LOADING:\r\n      return state.set('loading', action.data);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","export const CHANGE_RANK_LIST = 'home/rank/CHANGE_RANK_LIST';\r\nexport const CHANGE_LOADING = 'home/rank/CHANGE_LOADING';","import { fromJS } from 'immutable';\r\nimport { CHANGE_LOADING, CHANGE_RANK_LIST } from './constants'\r\nimport { getRankListRequest } from '../../../api/request';\r\n\r\nconst changeRankList = (data) => ({\r\n  type: CHANGE_RANK_LIST,\r\n  data: fromJS(data)\r\n})\r\n\r\nconst changeLoading = (data) => ({\r\n  type: CHANGE_LOADING,\r\n  data\r\n})\r\n\r\nexport const getRankList = () => {\r\n  return dispatch => {\r\n    getRankListRequest().then(data => {\r\n      let list = data && data.list;\r\n      dispatch(changeRankList(list));\r\n      dispatch(changeLoading(false));\r\n    })\r\n  }\r\n}","export const SET_CURRENT_SONG = 'player/SET_CURRENT_SONG';\r\nexport const SET_FULL_SCREEN = 'player/SET_FULL_SCREEN';\r\nexport const SET_PLAYING_STATE = 'player/SET_PLAYING_STATE';\r\nexport const SET_SEQUECE_PLAYLIST = 'player/SET_SEQUECE_PLAYLIST';\r\nexport const SET_PLAYLIST = 'player/SET_PLAYLIST';\r\nexport const SET_PLAY_MODE = 'player/SET_PLAY_MODE';\r\nexport const SET_CURRENT_INDEX = 'player/SET_CURRENT_INDEX';\r\nexport const SET_SHOW_PLAYLIST = 'player/SET_SHOW_PLAYLIST';\r\nexport const DELETE_SONG = 'player/DELETE_SONG';\r\nexport const INSERT_SONG = 'player/INSERT_SONG';"],"sourceRoot":""}