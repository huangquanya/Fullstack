{"version":3,"sources":["components/list/music.png","components/slider/style.js","components/slider/index.js","components/list/style.js","components/list/index.js","application/Recommend/style.js","application/Recommend/index.js"],"names":["module","exports","SliderContainer","styled","div","style","React","memo","props","useState","sliderSwiper","setSliderSwiper","bannerList","useEffect","length","newSliderSwiper","Swiper","loop","autoplay","delay","disableOnInteraction","pagination","el","className","map","slider","key","imageUrl","src","width","height","alt","ListWrapper","List","ListItem","withRouter","recommendList","item","index","id","onClick","history","push","placeholder","require","picUrl","getCount","playCount","name","Content","play","connect","state","getIn","enterLoading","songsCount","size","dispatch","getBannerDataDispatch","actionTypes","getRecommendListDataDispatch","bannerListJS","toJS","recommendListJS","onScroll","forceCheck","renderRoutes","route","routes"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,mC,2uBCGpC,IAAMC,EAAkBC,IAAOC,IAAV,IAYVC,IAAM,eAgBJA,IAAM,gB,kBCeXC,UAAMC,MAzCrB,SAAgBC,GAAQ,IAAD,EACmBC,mBAAS,MAD5B,mBACdC,EADc,KACAC,EADA,KAEbC,EAAeJ,EAAfI,WAeR,OAbAC,qBAAU,WACR,GAAID,EAAWE,SAAWJ,EAAc,CACtC,IAAIK,EAAkB,IAAIC,IAAO,oBAAqB,CACpDC,MAAM,EACNC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,WAAY,CAAEC,GAAI,wBAEpBX,EAAgBI,MAEjB,CAACH,EAAWE,OAAQJ,IAErB,kBAACR,EAAD,KACE,yBAAKqB,UAAU,WACf,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBAEXX,EAAWY,KAAI,SAAAC,GACb,OACE,yBAAKF,UAAU,eAAeG,IAAKD,EAAOE,UACxC,yBAAKJ,UAAU,cACb,yBAAKK,IAAKH,EAAOE,SAAUE,MAAM,OAAOC,OAAO,OAAOC,IAAI,uBAOtE,yBAAKR,UAAU,2B,2zCCpChB,IAAMS,EAAc7B,IAAOC,IAAV,KASX6B,EAAO9B,IAAOC,IAAV,KAQJ8B,EAAW/B,IAAOC,IAAV,IAoBFC,IAAM,eAEVA,IAAM,oBAkBFA,IAAM,eAEVA,IAAM,oB,gCCnBNC,UAAMC,KAAK4B,aAjC1B,SAAuB3B,GAInB,OACI,kBAACwB,EAAD,KACI,wBAAIT,UAAU,SAAd,4BACA,kBAACU,EAAD,KAEQzB,EAAM4B,cAAcZ,KAAI,SAACa,EAAMC,GAC3B,OACI,kBAACJ,EAAD,CAAUR,IAAKW,EAAKE,GAAGD,EAAOE,QAAS,kBAV1CD,EAU4DF,EAAKE,QATlF/B,EAAMiC,QAAQC,KAAd,qBAAiCH,IADjB,IAACA,IAWO,yBAAKhB,UAAU,eACX,yBAAKA,UAAU,aACf,kBAAC,IAAD,CAAUoB,YAAa,yBAAKd,MAAM,OAAOC,OAAO,OAAOF,IAAKgB,EAAQ,KAAgBb,IAAI,UAAgBD,OAAQ,IAE5G,yBAAKF,IAAKS,EAAKQ,OAAS,iBAAkBhB,MAAM,OAAOC,OAAO,OAAOC,IAAI,WAE7E,yBAAKR,UAAU,cACX,uBAAGA,UAAU,iBAAb,UACA,0BAAMA,UAAU,SAASuB,YAAST,EAAKU,cAG/C,yBAAKxB,UAAU,QAAQc,EAAKW,gB,iJC/BrD,IAAMC,EAAU9C,IAAOC,IAAV,KAGR,SAAAI,GAAK,OAAIA,EAAM0C,KAAO,EAAE,OAAQ,K,gBC8D7BC,uBArBS,SAACC,GAAD,MAAY,CAGlCxC,WAAYwC,EAAMC,MAAM,CAAC,YAAa,eACtCjB,cAAegB,EAAMC,MAAM,CAAC,YAAa,kBACzCC,aAAcF,EAAMC,MAAM,CAAC,YAAa,iBACxCE,WAAYH,EAAMC,MAAO,CAAC,SAAU,aAAaG,SAGxB,SAACC,GAC1B,MAAO,CACLC,sBADK,WAEHD,EAASE,QAEXC,6BAJK,WAKHH,EAASE,WAMAR,CAA6C7C,IAAMC,MAxDlE,SAAmBC,GAAQ,IACjBI,EAAwDJ,EAAxDI,WAAYwB,EAA4C5B,EAA5C4B,cAAekB,EAA6B9C,EAA7B8C,aAAaC,EAAgB/C,EAAhB+C,WAExCG,EAAwDlD,EAAxDkD,sBAAuBE,EAAiCpD,EAAjCoD,6BAE/B/C,qBAAU,WACHD,EAAW4C,MACdE,IAEGtB,EAAcoB,MACjBI,MAGD,IAEH,IAAMC,EAAejD,EAAaA,EAAWkD,OAAS,GAChDC,EAAkB3B,EAAgBA,EAAc0B,OAAS,GAE/D,OACE,kBAACb,EAAD,CAASC,KAAMK,GACb,kBAAC,IAAD,CAAQhC,UAAU,OAAOyC,SAAUC,cACjC,6BACE,kBAAC,EAAD,CAAQrD,WAAYiD,IACpB,kBAAC,EAAD,CAAezB,cAAe2B,MAGhCT,EAAe,kBAAC,IAAD,MAAsB,KAGrCY,YAAa1D,EAAM2D,MAAMC","file":"static/js/8.67a0448a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.64444b39.png\";","import styled from 'styled-components'\r\nimport style from '../../assets/global-style'\r\n\r\nexport const SliderContainer = styled.div`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: auto;\r\n  background: white;\r\n  .before {\r\n    position: absolute;\r\n    top: -300px;\r\n    height: 400px;\r\n    width: 100%;\r\n    background: ${style[\"theme-color\"]};\r\n  }\r\n  .slider-container {\r\n    position: relative;\r\n    width: 98%;\r\n    height: 160px;\r\n    overflow: hidden;\r\n    margin: auto;\r\n    border-radius: 6px;\r\n    .slider-nav {\r\n      position: absolute;\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    .swiper-pagination-bullet-active {\r\n      background: ${style[\"theme-color\"]};\r\n    }\r\n  }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { SliderContainer } from './style';\r\nimport \"swiper/dist/css/swiper.css\";\r\nimport Swiper from \"swiper\";\r\n\r\nfunction Slider(props) {\r\n  const [sliderSwiper, setSliderSwiper] = useState(null);\r\n  const { bannerList } = props;\r\n\r\n  useEffect(() => {\r\n    if (bannerList.length && !sliderSwiper) {\r\n      let newSliderSwiper = new Swiper(\".slider-container\", {\r\n        loop: true,\r\n        autoplay: {\r\n          delay: 3000,\r\n          disableOnInteraction: false,\r\n        },\r\n        pagination: { el: '.swiper-pagination' },\r\n      });\r\n      setSliderSwiper(newSliderSwiper);\r\n    }\r\n  }, [bannerList.length, sliderSwiper]);\r\n  return (\r\n    <SliderContainer>\r\n      <div className=\"before\"></div>\r\n      <div className=\"slider-container\">\r\n        <div className=\"swiper-wrapper\">\r\n          {\r\n            bannerList.map(slider => {\r\n              return (\r\n                <div className=\"swiper-slide\" key={slider.imageUrl}>\r\n                  <div className=\"slider-nav\">\r\n                    <img src={slider.imageUrl} width=\"100%\" height=\"100%\" alt=\"推荐\" />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n        <div className=\"swiper-pagination\"></div>\r\n      </div>\r\n\r\n    </SliderContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(Slider);","import styled from'styled-components';\r\nimport style from '../../assets/global-style';\r\n\r\nexport const ListWrapper = styled.div`\r\n  max-width: 100%;\r\n  .title {\r\n    font-weight: 700;\r\n    padding-left: 6px;\r\n    font-size: 14px;\r\n    line-height: 60px;\r\n  }\r\n`;\r\nexport const List = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nexport const ListItem = styled.div`\r\n  position: relative;\r\n  width: 32%;\r\n\r\n  .img_wrapper {\r\n    .decorate {\r\n      position: absolute;\r\n      top: 0;\r\n      width: 100%;\r\n      height: 35px;\r\n      border-radius: 3px;\r\n      background: linear-gradient (hsla (0,0%,43%,.4),hsla (0,0%,100%,0));\r\n    }\r\n    position: relative;\r\n    height: 0;\r\n    padding-bottom: 100%;\r\n    .play_count {\r\n      position: absolute;\r\n      right: 2px;\r\n      top: 2px;\r\n      font-size: ${style[\"font-size-s\"]};\r\n      line-height: 15px;\r\n      color: ${style[\"font-color-light\"]};\r\n      .play {\r\n        vertical-align: top;\r\n      }\r\n    }\r\n    img {\r\n      position: absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      border-radius: 3px;\r\n    }\r\n  }\r\n  .desc {\r\n      overflow: hidden;\r\n      margin-top: 2px;\r\n      padding: 0 2px;\r\n      height: 50px;\r\n      text-align: left;\r\n      font-size: ${style[\"font-size-s\"]};\r\n      line-height: 1.4;\r\n      color: ${style[\"font-color-desc\"]};\r\n    }\r\n`;","import React from 'react';\r\nimport {\r\n    ListWrapper,\r\n    ListItem,\r\n    List\r\n} from './style';\r\nimport { getCount } from \"../../api/utils\";\r\nimport { withRouter } from 'react-router-dom';//解决props上取不到history\r\nimport LazyLoad from 'react-lazyload'\r\n\r\nfunction RecommendList(props) {\r\n    const enterDetail = (id) => {\r\n        props.history.push(`/recommend/${id}`)\r\n    }\r\n    return (\r\n        <ListWrapper>\r\n            <h1 className=\"title\">推荐歌单</h1>\r\n            <List>\r\n                {\r\n                    props.recommendList.map((item, index) => {\r\n                        return (\r\n                            <ListItem key={item.id+index} onClick={() => enterDetail(item.id)}>\r\n                                <div className=\"img_wrapper\">\r\n                                    <div className=\"decorate\"></div>\r\n                                    <LazyLoad placeholder={<img width=\"100%\" height=\"100%\" src={require('./music.png')} alt='music'></img>} height={50}>\r\n                                        {/* 加此参数可以减小请求的图片资源大小 */}\r\n                                        <img src={item.picUrl + \"?param=300x300\"} width=\"100%\" height=\"100%\" alt=\"music\" />\r\n                                    </LazyLoad>\r\n                                    <div className=\"play_count\">\r\n                                        <i className=\"iconfont play\">&#xe885;</i>\r\n                                        <span className=\"count\">{getCount(item.playCount)}</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"desc\">{item.name}</div>\r\n                            </ListItem>\r\n                        )\r\n                    })\r\n                }\r\n            </List>\r\n        </ListWrapper>\r\n    )\r\n}\r\n\r\nexport default React.memo(withRouter(RecommendList));","import styled from'styled-components';\r\n\r\nexport const Content = styled.div`\r\n  position: fixed;\r\n  top: 90px;\r\n  bottom: ${props => props.play > 0?\"60px\": 0};\r\n  width: 100%;\r\n`","import React, { useEffect } from 'react';\r\nimport Slider from '../../components/slider/';\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from './store/actionCreators';\r\nimport RecommendList from '../../components/list/';\r\nimport Scroll from '../../baseUI/scroll/index';\r\nimport { Content } from './style';\r\nimport { forceCheck } from 'react-lazyload';\r\nimport Loading from '../../baseUI/loading'\r\nimport { renderRoutes } from 'react-router-config'\r\n\r\nfunction Recommend(props) {\r\n  const { bannerList, recommendList, enterLoading,songsCount  } = props;\r\n\r\n  const { getBannerDataDispatch, getRecommendListDataDispatch } = props;\r\n\r\n  useEffect(() => {\r\n    if (!bannerList.size) {\r\n      getBannerDataDispatch();\r\n    }\r\n    if (!recommendList.size) {\r\n      getRecommendListDataDispatch();\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\r\n  const recommendListJS = recommendList ? recommendList.toJS() : [];\r\n\r\n  return (\r\n    <Content play={songsCount}>\r\n      <Scroll className='list' onScroll={forceCheck} >\r\n        <div>\r\n          <Slider bannerList={bannerListJS}></Slider>\r\n          <RecommendList recommendList={recommendListJS}></RecommendList>\r\n        </div>\r\n      </Scroll>\r\n      { enterLoading ? <Loading></Loading> : null}\r\n      {/* // 其他代码\r\n      // 将目前所在路由的下一层子路由加以渲染 */}\r\n      { renderRoutes(props.route.routes)}\r\n    </Content>\r\n  );\r\n}\r\n\r\n// 映射 Redux 全局的 state 到组件的 props 上\r\nconst mapStateToProps = (state) => ({\r\n  // 不要在这里将数据 toJS\r\n  // 不然每次 diff 比对 props 的时候都是不一样的引用，还是导致不必要的重渲染，属于滥用 immutable\r\n  bannerList: state.getIn(['recommend', 'bannerList']),\r\n  recommendList: state.getIn(['recommend', 'recommendList']),\r\n  enterLoading: state.getIn(['recommend', 'enterLoading']),\r\n  songsCount: state.getIn (['player', 'playList']).size,// 尽量减少 toJS 操作，直接取 size 属性就代表了 list 的长度\r\n});\r\n// 映射 dispatch 到 props 上\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getBannerDataDispatch() {\r\n      dispatch(actionTypes.getBannerList());\r\n    },\r\n    getRecommendListDataDispatch() {\r\n      dispatch(actionTypes.getRecommendList());\r\n    },\r\n  }\r\n};\r\n\r\n// 将 ui 组件包装成容器组件\r\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Recommend));"],"sourceRoot":""}